ARM GAS  /tmp/cc95W0MT.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usbd_conf.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_PCD_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_PCD_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_PCD_MspInit:
  24              	.LFB64:
  25              		.file 1 "Src/usbd_conf.c"
   1:Src/usbd_conf.c **** /**
   2:Src/usbd_conf.c ****   ******************************************************************************
   3:Src/usbd_conf.c ****   * @file           : usbd_conf.c
   4:Src/usbd_conf.c ****   * @version        : v2.0_Cube
   5:Src/usbd_conf.c ****   * @brief          : This file implements the board support package for the USB device library
   6:Src/usbd_conf.c ****   ******************************************************************************
   7:Src/usbd_conf.c ****   * This notice applies to any and all portions of this file
   8:Src/usbd_conf.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usbd_conf.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usbd_conf.c ****   * inserted by the user or by software development tools
  11:Src/usbd_conf.c ****   * are owned by their respective copyright owners.
  12:Src/usbd_conf.c ****   *
  13:Src/usbd_conf.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  14:Src/usbd_conf.c ****   * All rights reserved.
  15:Src/usbd_conf.c ****   *
  16:Src/usbd_conf.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usbd_conf.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usbd_conf.c ****   *
  19:Src/usbd_conf.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer.
  21:Src/usbd_conf.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usbd_conf.c ****   *    and/or other materials provided with the distribution.
  24:Src/usbd_conf.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usbd_conf.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usbd_conf.c ****   *    derived from this software without specific written permission.
  27:Src/usbd_conf.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usbd_conf.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usbd_conf.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/usbd_conf.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usbd_conf.c ****   *    this license is void and will automatically terminate your rights under 
  32:Src/usbd_conf.c ****   *    this license. 
  33:Src/usbd_conf.c ****   *
ARM GAS  /tmp/cc95W0MT.s 			page 2


  34:Src/usbd_conf.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usbd_conf.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usbd_conf.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usbd_conf.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usbd_conf.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usbd_conf.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usbd_conf.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usbd_conf.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usbd_conf.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usbd_conf.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usbd_conf.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usbd_conf.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usbd_conf.c ****   *
  47:Src/usbd_conf.c ****   ******************************************************************************
  48:Src/usbd_conf.c **** */
  49:Src/usbd_conf.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/usbd_conf.c **** #include "stm32f1xx.h"
  51:Src/usbd_conf.c **** #include "stm32f1xx_hal.h"
  52:Src/usbd_conf.c **** #include "usbd_def.h"
  53:Src/usbd_conf.c **** #include "usbd_core.h"
  54:Src/usbd_conf.c **** #include "usbd_hid.h"
  55:Src/usbd_conf.c **** /* Private typedef -----------------------------------------------------------*/
  56:Src/usbd_conf.c **** /* Private define ------------------------------------------------------------*/
  57:Src/usbd_conf.c **** /* Private macro -------------------------------------------------------------*/
  58:Src/usbd_conf.c **** /* Private variables ---------------------------------------------------------*/
  59:Src/usbd_conf.c **** PCD_HandleTypeDef hpcd_USB_FS;
  60:Src/usbd_conf.c **** void _Error_Handler(char * file, int line);
  61:Src/usbd_conf.c **** 
  62:Src/usbd_conf.c **** /* USER CODE BEGIN 0 */
  63:Src/usbd_conf.c **** /* USER CODE END 0 */
  64:Src/usbd_conf.c **** 
  65:Src/usbd_conf.c **** /* Private function prototypes -----------------------------------------------*/
  66:Src/usbd_conf.c **** /* Private functions ---------------------------------------------------------*/
  67:Src/usbd_conf.c **** /* USER CODE BEGIN 1 */
  68:Src/usbd_conf.c **** /* USER CODE END 1 */
  69:Src/usbd_conf.c **** void HAL_PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state);
  70:Src/usbd_conf.c **** 
  71:Src/usbd_conf.c **** /*******************************************************************************
  72:Src/usbd_conf.c ****                        LL Driver Callbacks (PCD -> USB Device Library)
  73:Src/usbd_conf.c **** *******************************************************************************/
  74:Src/usbd_conf.c **** /* MSP Init */
  75:Src/usbd_conf.c **** 
  76:Src/usbd_conf.c **** void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
  77:Src/usbd_conf.c **** {
  26              		.loc 1 77 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  78:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB)
  31              		.loc 1 78 0
  32 0000 0268     		ldr	r2, [r0]
  33 0002 0E4B     		ldr	r3, .L8
  34 0004 9A42     		cmp	r2, r3
  35 0006 00D0     		beq	.L7
  36 0008 7047     		bx	lr
  37              	.L7:
ARM GAS  /tmp/cc95W0MT.s 			page 3


  77:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB)
  38              		.loc 1 77 0
  39 000a 00B5     		push	{lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 4
  42              		.cfi_offset 14, -4
  43 000c 83B0     		sub	sp, sp, #12
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 16
  46              	.LBB2:
  79:Src/usbd_conf.c ****   {
  80:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspInit 0 */
  81:Src/usbd_conf.c **** 
  82:Src/usbd_conf.c ****   /* USER CODE END USB_MspInit 0 */
  83:Src/usbd_conf.c ****     /* Peripheral clock enable */
  84:Src/usbd_conf.c ****     __HAL_RCC_USB_CLK_ENABLE();
  47              		.loc 1 84 0
  48 000e 03F5DA33 		add	r3, r3, #111616
  49 0012 DA69     		ldr	r2, [r3, #28]
  50 0014 42F40002 		orr	r2, r2, #8388608
  51 0018 DA61     		str	r2, [r3, #28]
  52 001a DB69     		ldr	r3, [r3, #28]
  53 001c 03F40003 		and	r3, r3, #8388608
  54 0020 0193     		str	r3, [sp, #4]
  55 0022 019B     		ldr	r3, [sp, #4]
  56              	.LBE2:
  85:Src/usbd_conf.c **** 
  86:Src/usbd_conf.c ****     /* Peripheral interrupt init */
  87:Src/usbd_conf.c ****     HAL_NVIC_SetPriority(USB_LP_CAN1_RX0_IRQn, 0, 0);
  57              		.loc 1 87 0
  58 0024 0022     		movs	r2, #0
  59 0026 1146     		mov	r1, r2
  60 0028 1420     		movs	r0, #20
  61              	.LVL1:
  62 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  63              	.LVL2:
  88:Src/usbd_conf.c ****     HAL_NVIC_EnableIRQ(USB_LP_CAN1_RX0_IRQn);
  64              		.loc 1 88 0
  65 002e 1420     		movs	r0, #20
  66 0030 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  67              	.LVL3:
  89:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspInit 1 */
  90:Src/usbd_conf.c **** 
  91:Src/usbd_conf.c ****   /* USER CODE END USB_MspInit 1 */
  92:Src/usbd_conf.c ****   }
  93:Src/usbd_conf.c **** }
  68              		.loc 1 93 0
  69 0034 03B0     		add	sp, sp, #12
  70              	.LCFI2:
  71              		.cfi_def_cfa_offset 4
  72              		@ sp needed
  73 0036 5DF804FB 		ldr	pc, [sp], #4
  74              	.L9:
  75 003a 00BF     		.align	2
  76              	.L8:
  77 003c 005C0040 		.word	1073765376
  78              		.cfi_endproc
ARM GAS  /tmp/cc95W0MT.s 			page 4


  79              	.LFE64:
  81              		.section	.text.HAL_PCD_MspDeInit,"ax",%progbits
  82              		.align	1
  83              		.global	HAL_PCD_MspDeInit
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu softvfp
  89              	HAL_PCD_MspDeInit:
  90              	.LFB65:
  94:Src/usbd_conf.c **** 
  95:Src/usbd_conf.c **** void HAL_PCD_MspDeInit(PCD_HandleTypeDef* pcdHandle)
  96:Src/usbd_conf.c **** {
  91              		.loc 1 96 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL4:
  96 0000 08B5     		push	{r3, lr}
  97              	.LCFI3:
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 3, -8
 100              		.cfi_offset 14, -4
  97:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB)
 101              		.loc 1 97 0
 102 0002 0268     		ldr	r2, [r0]
 103 0004 064B     		ldr	r3, .L14
 104 0006 9A42     		cmp	r2, r3
 105 0008 00D0     		beq	.L13
 106              	.LVL5:
 107              	.L10:
 108 000a 08BD     		pop	{r3, pc}
 109              	.LVL6:
 110              	.L13:
  98:Src/usbd_conf.c ****   {
  99:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspDeInit 0 */
 100:Src/usbd_conf.c **** 
 101:Src/usbd_conf.c ****   /* USER CODE END USB_MspDeInit 0 */
 102:Src/usbd_conf.c ****     /* Peripheral clock disable */
 103:Src/usbd_conf.c ****     __HAL_RCC_USB_CLK_DISABLE();
 111              		.loc 1 103 0
 112 000c 054A     		ldr	r2, .L14+4
 113 000e D369     		ldr	r3, [r2, #28]
 114 0010 23F40003 		bic	r3, r3, #8388608
 115 0014 D361     		str	r3, [r2, #28]
 104:Src/usbd_conf.c **** 
 105:Src/usbd_conf.c ****     /* Peripheral interrupt Deinit*/
 106:Src/usbd_conf.c ****     HAL_NVIC_DisableIRQ(USB_LP_CAN1_RX0_IRQn);
 116              		.loc 1 106 0
 117 0016 1420     		movs	r0, #20
 118              	.LVL7:
 119 0018 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 120              	.LVL8:
 107:Src/usbd_conf.c **** 
 108:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspDeInit 1 */
 109:Src/usbd_conf.c **** 
 110:Src/usbd_conf.c ****   /* USER CODE END USB_MspDeInit 1 */
ARM GAS  /tmp/cc95W0MT.s 			page 5


 111:Src/usbd_conf.c ****   }
 112:Src/usbd_conf.c **** }
 121              		.loc 1 112 0
 122 001c F5E7     		b	.L10
 123              	.L15:
 124 001e 00BF     		.align	2
 125              	.L14:
 126 0020 005C0040 		.word	1073765376
 127 0024 00100240 		.word	1073876992
 128              		.cfi_endproc
 129              	.LFE65:
 131              		.section	.text.HAL_PCD_SetupStageCallback,"ax",%progbits
 132              		.align	1
 133              		.global	HAL_PCD_SetupStageCallback
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu softvfp
 139              	HAL_PCD_SetupStageCallback:
 140              	.LFB66:
 113:Src/usbd_conf.c **** 
 114:Src/usbd_conf.c **** /**
 115:Src/usbd_conf.c ****   * @brief  Setup Stage callback
 116:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 117:Src/usbd_conf.c ****   * @retval None
 118:Src/usbd_conf.c ****   */
 119:Src/usbd_conf.c **** void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
 120:Src/usbd_conf.c **** {
 141              		.loc 1 120 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              	.LVL9:
 146 0000 08B5     		push	{r3, lr}
 147              	.LCFI4:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 3, -8
 150              		.cfi_offset 14, -4
 121:Src/usbd_conf.c ****   USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 151              		.loc 1 121 0
 152 0002 00F22C41 		addw	r1, r0, #1068
 153 0006 D0F85C04 		ldr	r0, [r0, #1116]
 154              	.LVL10:
 155 000a FFF7FEFF 		bl	USBD_LL_SetupStage
 156              	.LVL11:
 157 000e 08BD     		pop	{r3, pc}
 158              		.cfi_endproc
 159              	.LFE66:
 161              		.section	.text.HAL_PCD_DataOutStageCallback,"ax",%progbits
 162              		.align	1
 163              		.global	HAL_PCD_DataOutStageCallback
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu softvfp
 169              	HAL_PCD_DataOutStageCallback:
 170              	.LFB67:
ARM GAS  /tmp/cc95W0MT.s 			page 6


 122:Src/usbd_conf.c **** }
 123:Src/usbd_conf.c **** 
 124:Src/usbd_conf.c **** /**
 125:Src/usbd_conf.c ****   * @brief  Data Out Stage callback.
 126:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 127:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 128:Src/usbd_conf.c ****   * @retval None
 129:Src/usbd_conf.c ****   */
 130:Src/usbd_conf.c **** void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 131:Src/usbd_conf.c **** {
 171              		.loc 1 131 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              	.LVL12:
 176 0000 08B5     		push	{r3, lr}
 177              	.LCFI5:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 3, -8
 180              		.cfi_offset 14, -4
 132:Src/usbd_conf.c ****   USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 181              		.loc 1 132 0
 182 0002 00EB4113 		add	r3, r0, r1, lsl #5
 183 0006 D3F83C22 		ldr	r2, [r3, #572]
 184 000a D0F85C04 		ldr	r0, [r0, #1116]
 185              	.LVL13:
 186 000e FFF7FEFF 		bl	USBD_LL_DataOutStage
 187              	.LVL14:
 188 0012 08BD     		pop	{r3, pc}
 189              		.cfi_endproc
 190              	.LFE67:
 192              		.section	.text.HAL_PCD_DataInStageCallback,"ax",%progbits
 193              		.align	1
 194              		.global	HAL_PCD_DataInStageCallback
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu softvfp
 200              	HAL_PCD_DataInStageCallback:
 201              	.LFB68:
 133:Src/usbd_conf.c **** }
 134:Src/usbd_conf.c **** 
 135:Src/usbd_conf.c **** /**
 136:Src/usbd_conf.c ****   * @brief  Data In Stage callback..
 137:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 138:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 139:Src/usbd_conf.c ****   * @retval None
 140:Src/usbd_conf.c ****   */
 141:Src/usbd_conf.c **** void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 142:Src/usbd_conf.c **** {
 202              		.loc 1 142 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              	.LVL15:
 207 0000 08B5     		push	{r3, lr}
 208              	.LCFI6:
ARM GAS  /tmp/cc95W0MT.s 			page 7


 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 3, -8
 211              		.cfi_offset 14, -4
 143:Src/usbd_conf.c ****   USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 212              		.loc 1 143 0
 213 0002 00EB4113 		add	r3, r0, r1, lsl #5
 214 0006 DA6B     		ldr	r2, [r3, #60]
 215 0008 D0F85C04 		ldr	r0, [r0, #1116]
 216              	.LVL16:
 217 000c FFF7FEFF 		bl	USBD_LL_DataInStage
 218              	.LVL17:
 219 0010 08BD     		pop	{r3, pc}
 220              		.cfi_endproc
 221              	.LFE68:
 223              		.section	.text.HAL_PCD_SOFCallback,"ax",%progbits
 224              		.align	1
 225              		.global	HAL_PCD_SOFCallback
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu softvfp
 231              	HAL_PCD_SOFCallback:
 232              	.LFB69:
 144:Src/usbd_conf.c **** }
 145:Src/usbd_conf.c **** 
 146:Src/usbd_conf.c **** /**
 147:Src/usbd_conf.c ****   * @brief  SOF callback.
 148:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 149:Src/usbd_conf.c ****   * @retval None
 150:Src/usbd_conf.c ****   */
 151:Src/usbd_conf.c **** void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
 152:Src/usbd_conf.c **** {
 233              		.loc 1 152 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              	.LVL18:
 238 0000 08B5     		push	{r3, lr}
 239              	.LCFI7:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 3, -8
 242              		.cfi_offset 14, -4
 153:Src/usbd_conf.c ****   USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 243              		.loc 1 153 0
 244 0002 D0F85C04 		ldr	r0, [r0, #1116]
 245              	.LVL19:
 246 0006 FFF7FEFF 		bl	USBD_LL_SOF
 247              	.LVL20:
 248 000a 08BD     		pop	{r3, pc}
 249              		.cfi_endproc
 250              	.LFE69:
 252              		.section	.text.HAL_PCD_ResetCallback,"ax",%progbits
 253              		.align	1
 254              		.global	HAL_PCD_ResetCallback
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
ARM GAS  /tmp/cc95W0MT.s 			page 8


 258              		.fpu softvfp
 260              	HAL_PCD_ResetCallback:
 261              	.LFB70:
 154:Src/usbd_conf.c **** }
 155:Src/usbd_conf.c **** 
 156:Src/usbd_conf.c **** /**
 157:Src/usbd_conf.c ****   * @brief  Reset callback.
 158:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 159:Src/usbd_conf.c ****   * @retval None
 160:Src/usbd_conf.c ****   */
 161:Src/usbd_conf.c **** void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
 162:Src/usbd_conf.c **** { 
 262              		.loc 1 162 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              	.LVL21:
 267 0000 10B5     		push	{r4, lr}
 268              	.LCFI8:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 4, -8
 271              		.cfi_offset 14, -4
 272 0002 0446     		mov	r4, r0
 273              	.LVL22:
 163:Src/usbd_conf.c ****   USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 164:Src/usbd_conf.c **** 
 165:Src/usbd_conf.c ****   /*Set USB Current Speed*/
 166:Src/usbd_conf.c ****   switch (hpcd->Init.speed)
 167:Src/usbd_conf.c ****   {
 168:Src/usbd_conf.c ****   case PCD_SPEED_FULL:
 169:Src/usbd_conf.c ****     speed = USBD_SPEED_FULL;    
 170:Src/usbd_conf.c ****     break;
 171:Src/usbd_conf.c **** 	
 172:Src/usbd_conf.c ****   default:
 173:Src/usbd_conf.c ****     speed = USBD_SPEED_FULL;    
 174:Src/usbd_conf.c ****     break;    
 175:Src/usbd_conf.c ****   }
 176:Src/usbd_conf.c ****   USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);  
 274              		.loc 1 176 0
 275 0004 0121     		movs	r1, #1
 276 0006 D0F85C04 		ldr	r0, [r0, #1116]
 277              	.LVL23:
 278 000a FFF7FEFF 		bl	USBD_LL_SetSpeed
 279              	.LVL24:
 177:Src/usbd_conf.c ****   
 178:Src/usbd_conf.c ****   /*Reset Device*/
 179:Src/usbd_conf.c ****   USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 280              		.loc 1 179 0
 281 000e D4F85C04 		ldr	r0, [r4, #1116]
 282 0012 FFF7FEFF 		bl	USBD_LL_Reset
 283              	.LVL25:
 284 0016 10BD     		pop	{r4, pc}
 285              		.cfi_endproc
 286              	.LFE70:
 288              		.section	.text.HAL_PCD_SuspendCallback,"ax",%progbits
 289              		.align	1
 290              		.global	HAL_PCD_SuspendCallback
ARM GAS  /tmp/cc95W0MT.s 			page 9


 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu softvfp
 296              	HAL_PCD_SuspendCallback:
 297              	.LFB71:
 180:Src/usbd_conf.c **** }
 181:Src/usbd_conf.c **** 
 182:Src/usbd_conf.c **** /**
 183:Src/usbd_conf.c ****   * @brief  Suspend callback.
 184:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 185:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 186:Src/usbd_conf.c ****   * @retval None
 187:Src/usbd_conf.c ****   */
 188:Src/usbd_conf.c **** void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
 189:Src/usbd_conf.c **** {
 298              		.loc 1 189 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              	.LVL26:
 303 0000 10B5     		push	{r4, lr}
 304              	.LCFI9:
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 4, -8
 307              		.cfi_offset 14, -4
 308 0002 0446     		mov	r4, r0
 190:Src/usbd_conf.c ****   /* Inform USB library that core enters in suspend Mode */
 191:Src/usbd_conf.c ****   USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 309              		.loc 1 191 0
 310 0004 D0F85C04 		ldr	r0, [r0, #1116]
 311              	.LVL27:
 312 0008 FFF7FEFF 		bl	USBD_LL_Suspend
 313              	.LVL28:
 192:Src/usbd_conf.c ****   /*Enter in STOP mode */
 193:Src/usbd_conf.c ****   /* USER CODE BEGIN 2 */  
 194:Src/usbd_conf.c ****   if (hpcd->Init.low_power_enable)
 314              		.loc 1 194 0
 315 000c A369     		ldr	r3, [r4, #24]
 316 000e 23B1     		cbz	r3, .L26
 195:Src/usbd_conf.c ****   {
 196:Src/usbd_conf.c ****     /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register */
 197:Src/usbd_conf.c ****     SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 317              		.loc 1 197 0
 318 0010 024A     		ldr	r2, .L29
 319 0012 1369     		ldr	r3, [r2, #16]
 320 0014 43F00603 		orr	r3, r3, #6
 321 0018 1361     		str	r3, [r2, #16]
 322              	.L26:
 323 001a 10BD     		pop	{r4, pc}
 324              	.LVL29:
 325              	.L30:
 326              		.align	2
 327              	.L29:
 328 001c 00ED00E0 		.word	-536810240
 329              		.cfi_endproc
 330              	.LFE71:
ARM GAS  /tmp/cc95W0MT.s 			page 10


 332              		.section	.text.HAL_PCD_ResumeCallback,"ax",%progbits
 333              		.align	1
 334              		.global	HAL_PCD_ResumeCallback
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu softvfp
 340              	HAL_PCD_ResumeCallback:
 341              	.LFB72:
 198:Src/usbd_conf.c ****   }
 199:Src/usbd_conf.c ****   /* USER CODE END 2 */
 200:Src/usbd_conf.c **** }
 201:Src/usbd_conf.c **** 
 202:Src/usbd_conf.c **** /**
 203:Src/usbd_conf.c ****   * @brief  Resume callback.
 204:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 205:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 206:Src/usbd_conf.c ****   * @retval None
 207:Src/usbd_conf.c ****   */
 208:Src/usbd_conf.c **** void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
 209:Src/usbd_conf.c **** {
 342              		.loc 1 209 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              	.LVL30:
 347 0000 08B5     		push	{r3, lr}
 348              	.LCFI10:
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 3, -8
 351              		.cfi_offset 14, -4
 210:Src/usbd_conf.c ****   /* USER CODE BEGIN 3 */
 211:Src/usbd_conf.c ****   /* USER CODE END 3 */
 212:Src/usbd_conf.c ****   USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 352              		.loc 1 212 0
 353 0002 D0F85C04 		ldr	r0, [r0, #1116]
 354              	.LVL31:
 355 0006 FFF7FEFF 		bl	USBD_LL_Resume
 356              	.LVL32:
 357 000a 08BD     		pop	{r3, pc}
 358              		.cfi_endproc
 359              	.LFE72:
 361              		.section	.text.HAL_PCD_ISOOUTIncompleteCallback,"ax",%progbits
 362              		.align	1
 363              		.global	HAL_PCD_ISOOUTIncompleteCallback
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu softvfp
 369              	HAL_PCD_ISOOUTIncompleteCallback:
 370              	.LFB73:
 213:Src/usbd_conf.c ****   
 214:Src/usbd_conf.c **** }
 215:Src/usbd_conf.c **** 
 216:Src/usbd_conf.c **** /**
 217:Src/usbd_conf.c ****   * @brief  ISOOUTIncomplete callback.
 218:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
ARM GAS  /tmp/cc95W0MT.s 			page 11


 219:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 220:Src/usbd_conf.c ****   * @retval None
 221:Src/usbd_conf.c ****   */
 222:Src/usbd_conf.c **** void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 223:Src/usbd_conf.c **** {
 371              		.loc 1 223 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              	.LVL33:
 376 0000 08B5     		push	{r3, lr}
 377              	.LCFI11:
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 3, -8
 380              		.cfi_offset 14, -4
 224:Src/usbd_conf.c ****   USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 381              		.loc 1 224 0
 382 0002 D0F85C04 		ldr	r0, [r0, #1116]
 383              	.LVL34:
 384 0006 FFF7FEFF 		bl	USBD_LL_IsoOUTIncomplete
 385              	.LVL35:
 386 000a 08BD     		pop	{r3, pc}
 387              		.cfi_endproc
 388              	.LFE73:
 390              		.section	.text.HAL_PCD_ISOINIncompleteCallback,"ax",%progbits
 391              		.align	1
 392              		.global	HAL_PCD_ISOINIncompleteCallback
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 396              		.fpu softvfp
 398              	HAL_PCD_ISOINIncompleteCallback:
 399              	.LFB74:
 225:Src/usbd_conf.c **** }
 226:Src/usbd_conf.c **** 
 227:Src/usbd_conf.c **** /**
 228:Src/usbd_conf.c ****   * @brief  ISOINIncomplete callback.
 229:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 230:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 231:Src/usbd_conf.c ****   * @retval None
 232:Src/usbd_conf.c ****   */
 233:Src/usbd_conf.c **** void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 234:Src/usbd_conf.c **** {
 400              		.loc 1 234 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              	.LVL36:
 405 0000 08B5     		push	{r3, lr}
 406              	.LCFI12:
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 3, -8
 409              		.cfi_offset 14, -4
 235:Src/usbd_conf.c ****   USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 410              		.loc 1 235 0
 411 0002 D0F85C04 		ldr	r0, [r0, #1116]
 412              	.LVL37:
ARM GAS  /tmp/cc95W0MT.s 			page 12


 413 0006 FFF7FEFF 		bl	USBD_LL_IsoINIncomplete
 414              	.LVL38:
 415 000a 08BD     		pop	{r3, pc}
 416              		.cfi_endproc
 417              	.LFE74:
 419              		.section	.text.HAL_PCD_ConnectCallback,"ax",%progbits
 420              		.align	1
 421              		.global	HAL_PCD_ConnectCallback
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 425              		.fpu softvfp
 427              	HAL_PCD_ConnectCallback:
 428              	.LFB75:
 236:Src/usbd_conf.c **** }
 237:Src/usbd_conf.c **** 
 238:Src/usbd_conf.c **** /**
 239:Src/usbd_conf.c ****   * @brief  ConnectCallback callback.
 240:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 241:Src/usbd_conf.c ****   * @retval None
 242:Src/usbd_conf.c ****   */
 243:Src/usbd_conf.c **** void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
 244:Src/usbd_conf.c **** {
 429              		.loc 1 244 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              	.LVL39:
 434 0000 08B5     		push	{r3, lr}
 435              	.LCFI13:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 3, -8
 438              		.cfi_offset 14, -4
 245:Src/usbd_conf.c ****   USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 439              		.loc 1 245 0
 440 0002 D0F85C04 		ldr	r0, [r0, #1116]
 441              	.LVL40:
 442 0006 FFF7FEFF 		bl	USBD_LL_DevConnected
 443              	.LVL41:
 444 000a 08BD     		pop	{r3, pc}
 445              		.cfi_endproc
 446              	.LFE75:
 448              		.section	.text.HAL_PCD_DisconnectCallback,"ax",%progbits
 449              		.align	1
 450              		.global	HAL_PCD_DisconnectCallback
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 454              		.fpu softvfp
 456              	HAL_PCD_DisconnectCallback:
 457              	.LFB76:
 246:Src/usbd_conf.c **** }
 247:Src/usbd_conf.c **** 
 248:Src/usbd_conf.c **** /**
 249:Src/usbd_conf.c ****   * @brief  Disconnect callback.
 250:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 251:Src/usbd_conf.c ****   * @retval None
ARM GAS  /tmp/cc95W0MT.s 			page 13


 252:Src/usbd_conf.c ****   */
 253:Src/usbd_conf.c **** void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
 254:Src/usbd_conf.c **** {
 458              		.loc 1 254 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              	.LVL42:
 463 0000 08B5     		push	{r3, lr}
 464              	.LCFI14:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 3, -8
 467              		.cfi_offset 14, -4
 255:Src/usbd_conf.c ****   USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 468              		.loc 1 255 0
 469 0002 D0F85C04 		ldr	r0, [r0, #1116]
 470              	.LVL43:
 471 0006 FFF7FEFF 		bl	USBD_LL_DevDisconnected
 472              	.LVL44:
 473 000a 08BD     		pop	{r3, pc}
 474              		.cfi_endproc
 475              	.LFE76:
 477              		.section	.text.USBD_LL_Init,"ax",%progbits
 478              		.align	1
 479              		.global	USBD_LL_Init
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu softvfp
 485              	USBD_LL_Init:
 486              	.LFB77:
 256:Src/usbd_conf.c **** }
 257:Src/usbd_conf.c **** 
 258:Src/usbd_conf.c **** /*******************************************************************************
 259:Src/usbd_conf.c ****                        LL Driver Interface (USB Device Library --> PCD)
 260:Src/usbd_conf.c **** *******************************************************************************/
 261:Src/usbd_conf.c **** /**
 262:Src/usbd_conf.c ****   * @brief  Initializes the Low Level portion of the Device driver.
 263:Src/usbd_conf.c ****   * @param  pdev: Device handle
 264:Src/usbd_conf.c ****   * @retval USBD Status
 265:Src/usbd_conf.c ****   */
 266:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Init (USBD_HandleTypeDef *pdev)
 267:Src/usbd_conf.c **** { 
 487              		.loc 1 267 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              	.LVL45:
 492 0000 10B5     		push	{r4, lr}
 493              	.LCFI15:
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 4, -8
 496              		.cfi_offset 14, -4
 497 0002 0446     		mov	r4, r0
 268:Src/usbd_conf.c ****   /* Init USB_IP */
 269:Src/usbd_conf.c ****   /* Link The driver to the stack */
 270:Src/usbd_conf.c ****   hpcd_USB_FS.pData = pdev;
ARM GAS  /tmp/cc95W0MT.s 			page 14


 498              		.loc 1 270 0
 499 0004 1848     		ldr	r0, .L45
 500              	.LVL46:
 501 0006 C0F85C44 		str	r4, [r0, #1116]
 271:Src/usbd_conf.c ****   pdev->pData = &hpcd_USB_FS;
 502              		.loc 1 271 0
 503 000a C4F82002 		str	r0, [r4, #544]
 272:Src/usbd_conf.c **** 
 273:Src/usbd_conf.c ****   hpcd_USB_FS.Instance = USB;
 504              		.loc 1 273 0
 505 000e 174B     		ldr	r3, .L45+4
 506 0010 0360     		str	r3, [r0]
 274:Src/usbd_conf.c ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 507              		.loc 1 274 0
 508 0012 0823     		movs	r3, #8
 509 0014 4360     		str	r3, [r0, #4]
 275:Src/usbd_conf.c ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 510              		.loc 1 275 0
 511 0016 0223     		movs	r3, #2
 512 0018 8360     		str	r3, [r0, #8]
 276:Src/usbd_conf.c ****   hpcd_USB_FS.Init.ep0_mps = DEP0CTL_MPS_8;
 513              		.loc 1 276 0
 514 001a 0323     		movs	r3, #3
 515 001c C360     		str	r3, [r0, #12]
 277:Src/usbd_conf.c ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
 516              		.loc 1 277 0
 517 001e 0023     		movs	r3, #0
 518 0020 8361     		str	r3, [r0, #24]
 278:Src/usbd_conf.c ****   hpcd_USB_FS.Init.lpm_enable = DISABLE;
 519              		.loc 1 278 0
 520 0022 C361     		str	r3, [r0, #28]
 279:Src/usbd_conf.c ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 521              		.loc 1 279 0
 522 0024 0362     		str	r3, [r0, #32]
 280:Src/usbd_conf.c ****   if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 523              		.loc 1 280 0
 524 0026 FFF7FEFF 		bl	HAL_PCD_Init
 525              	.LVL47:
 526 002a B8B9     		cbnz	r0, .L44
 527              	.L42:
 281:Src/usbd_conf.c ****   {
 282:Src/usbd_conf.c ****     _Error_Handler(__FILE__, __LINE__);
 283:Src/usbd_conf.c ****   }
 284:Src/usbd_conf.c **** 
 285:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x00 , PCD_SNG_BUF, 0x18);
 528              		.loc 1 285 0
 529 002c 1823     		movs	r3, #24
 530 002e 0022     		movs	r2, #0
 531 0030 1146     		mov	r1, r2
 532 0032 D4F82002 		ldr	r0, [r4, #544]
 533 0036 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 534              	.LVL48:
 286:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x80 , PCD_SNG_BUF, 0x58);
 535              		.loc 1 286 0
 536 003a 5823     		movs	r3, #88
 537 003c 0022     		movs	r2, #0
 538 003e 8021     		movs	r1, #128
ARM GAS  /tmp/cc95W0MT.s 			page 15


 539 0040 D4F82002 		ldr	r0, [r4, #544]
 540 0044 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 541              	.LVL49:
 287:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x81 , PCD_SNG_BUF, 0x100);  
 542              		.loc 1 287 0
 543 0048 4FF48073 		mov	r3, #256
 544 004c 0022     		movs	r2, #0
 545 004e 8121     		movs	r1, #129
 546 0050 D4F82002 		ldr	r0, [r4, #544]
 547 0054 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 548              	.LVL50:
 288:Src/usbd_conf.c ****   return USBD_OK;
 289:Src/usbd_conf.c **** }
 549              		.loc 1 289 0
 550 0058 0020     		movs	r0, #0
 551 005a 10BD     		pop	{r4, pc}
 552              	.LVL51:
 553              	.L44:
 282:Src/usbd_conf.c ****   }
 554              		.loc 1 282 0
 555 005c 4FF48D71 		mov	r1, #282
 556 0060 0348     		ldr	r0, .L45+8
 557 0062 FFF7FEFF 		bl	_Error_Handler
 558              	.LVL52:
 559 0066 E1E7     		b	.L42
 560              	.L46:
 561              		.align	2
 562              	.L45:
 563 0068 00000000 		.word	hpcd_USB_FS
 564 006c 005C0040 		.word	1073765376
 565 0070 00000000 		.word	.LC0
 566              		.cfi_endproc
 567              	.LFE77:
 569              		.section	.text.USBD_LL_DeInit,"ax",%progbits
 570              		.align	1
 571              		.global	USBD_LL_DeInit
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 575              		.fpu softvfp
 577              	USBD_LL_DeInit:
 578              	.LFB78:
 290:Src/usbd_conf.c **** 
 291:Src/usbd_conf.c **** /**
 292:Src/usbd_conf.c ****   * @brief  De-Initializes the Low Level portion of the Device driver.
 293:Src/usbd_conf.c ****   * @param  pdev: Device handle
 294:Src/usbd_conf.c ****   * @retval USBD Status
 295:Src/usbd_conf.c ****   */
 296:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_DeInit (USBD_HandleTypeDef *pdev)
 297:Src/usbd_conf.c **** {
 579              		.loc 1 297 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              	.LVL53:
 584 0000 08B5     		push	{r3, lr}
 585              	.LCFI16:
ARM GAS  /tmp/cc95W0MT.s 			page 16


 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 3, -8
 588              		.cfi_offset 14, -4
 589              	.LVL54:
 298:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 299:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 300:Src/usbd_conf.c ****  
 301:Src/usbd_conf.c ****   hal_status = HAL_PCD_DeInit(pdev->pData);
 590              		.loc 1 301 0
 591 0002 D0F82002 		ldr	r0, [r0, #544]
 592              	.LVL55:
 593 0006 FFF7FEFF 		bl	HAL_PCD_DeInit
 594              	.LVL56:
 302:Src/usbd_conf.c ****      
 303:Src/usbd_conf.c ****   switch (hal_status) {
 595              		.loc 1 303 0
 596 000a 18B1     		cbz	r0, .L49
 597 000c 0228     		cmp	r0, #2
 598 000e 03D0     		beq	.L50
 304:Src/usbd_conf.c ****     case HAL_OK :
 305:Src/usbd_conf.c ****       usb_status = USBD_OK;
 306:Src/usbd_conf.c ****     break;
 307:Src/usbd_conf.c ****     case HAL_ERROR :
 308:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 599              		.loc 1 308 0
 600 0010 0220     		movs	r0, #2
 601              	.LVL57:
 309:Src/usbd_conf.c ****     break;
 310:Src/usbd_conf.c ****     case HAL_BUSY :
 311:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 312:Src/usbd_conf.c ****     break;
 313:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 314:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 315:Src/usbd_conf.c ****     break;
 316:Src/usbd_conf.c ****     default :
 317:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 318:Src/usbd_conf.c ****     break;
 319:Src/usbd_conf.c ****   }
 320:Src/usbd_conf.c ****   return usb_status; 
 321:Src/usbd_conf.c **** }
 602              		.loc 1 321 0
 603 0012 08BD     		pop	{r3, pc}
 604              	.LVL58:
 605              	.L49:
 305:Src/usbd_conf.c ****     break;
 606              		.loc 1 305 0
 607 0014 0020     		movs	r0, #0
 608              	.LVL59:
 609 0016 08BD     		pop	{r3, pc}
 610              	.LVL60:
 611              	.L50:
 311:Src/usbd_conf.c ****     break;
 612              		.loc 1 311 0
 613 0018 0120     		movs	r0, #1
 614              	.LVL61:
 312:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 615              		.loc 1 312 0
ARM GAS  /tmp/cc95W0MT.s 			page 17


 616 001a 08BD     		pop	{r3, pc}
 617              		.cfi_endproc
 618              	.LFE78:
 620              		.section	.text.USBD_LL_Start,"ax",%progbits
 621              		.align	1
 622              		.global	USBD_LL_Start
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu softvfp
 628              	USBD_LL_Start:
 629              	.LFB79:
 322:Src/usbd_conf.c **** 
 323:Src/usbd_conf.c **** /**
 324:Src/usbd_conf.c ****   * @brief  Starts the Low Level portion of the Device driver. 
 325:Src/usbd_conf.c ****   * @param  pdev: Device handle
 326:Src/usbd_conf.c ****   * @retval USBD Status
 327:Src/usbd_conf.c ****   */
 328:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Start(USBD_HandleTypeDef *pdev)
 329:Src/usbd_conf.c **** {
 630              		.loc 1 329 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              	.LVL62:
 635 0000 08B5     		push	{r3, lr}
 636              	.LCFI17:
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 3, -8
 639              		.cfi_offset 14, -4
 640              	.LVL63:
 330:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 331:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 332:Src/usbd_conf.c ****  
 333:Src/usbd_conf.c ****   hal_status = HAL_PCD_Start(pdev->pData);
 641              		.loc 1 333 0
 642 0002 D0F82002 		ldr	r0, [r0, #544]
 643              	.LVL64:
 644 0006 FFF7FEFF 		bl	HAL_PCD_Start
 645              	.LVL65:
 334:Src/usbd_conf.c ****      
 335:Src/usbd_conf.c ****   switch (hal_status) {
 646              		.loc 1 335 0
 647 000a 18B1     		cbz	r0, .L56
 648 000c 0228     		cmp	r0, #2
 649 000e 03D0     		beq	.L57
 336:Src/usbd_conf.c ****     case HAL_OK :
 337:Src/usbd_conf.c ****       usb_status = USBD_OK;
 338:Src/usbd_conf.c ****     break;
 339:Src/usbd_conf.c ****     case HAL_ERROR :
 340:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 650              		.loc 1 340 0
 651 0010 0220     		movs	r0, #2
 652              	.LVL66:
 341:Src/usbd_conf.c ****     break;
 342:Src/usbd_conf.c ****     case HAL_BUSY :
 343:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
ARM GAS  /tmp/cc95W0MT.s 			page 18


 344:Src/usbd_conf.c ****     break;
 345:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 346:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 347:Src/usbd_conf.c ****     break;
 348:Src/usbd_conf.c ****     default :
 349:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 350:Src/usbd_conf.c ****     break;
 351:Src/usbd_conf.c ****   }
 352:Src/usbd_conf.c ****   return usb_status;  
 353:Src/usbd_conf.c **** }
 653              		.loc 1 353 0
 654 0012 08BD     		pop	{r3, pc}
 655              	.LVL67:
 656              	.L56:
 337:Src/usbd_conf.c ****     break;
 657              		.loc 1 337 0
 658 0014 0020     		movs	r0, #0
 659              	.LVL68:
 660 0016 08BD     		pop	{r3, pc}
 661              	.LVL69:
 662              	.L57:
 343:Src/usbd_conf.c ****     break;
 663              		.loc 1 343 0
 664 0018 0120     		movs	r0, #1
 665              	.LVL70:
 344:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 666              		.loc 1 344 0
 667 001a 08BD     		pop	{r3, pc}
 668              		.cfi_endproc
 669              	.LFE79:
 671              		.section	.text.USBD_LL_Stop,"ax",%progbits
 672              		.align	1
 673              		.global	USBD_LL_Stop
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu softvfp
 679              	USBD_LL_Stop:
 680              	.LFB80:
 354:Src/usbd_conf.c **** 
 355:Src/usbd_conf.c **** /**
 356:Src/usbd_conf.c ****   * @brief  Stops the Low Level portion of the Device driver.
 357:Src/usbd_conf.c ****   * @param  pdev: Device handle
 358:Src/usbd_conf.c ****   * @retval USBD Status
 359:Src/usbd_conf.c ****   */
 360:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Stop (USBD_HandleTypeDef *pdev)
 361:Src/usbd_conf.c **** {
 681              		.loc 1 361 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              	.LVL71:
 686 0000 08B5     		push	{r3, lr}
 687              	.LCFI18:
 688              		.cfi_def_cfa_offset 8
 689              		.cfi_offset 3, -8
 690              		.cfi_offset 14, -4
ARM GAS  /tmp/cc95W0MT.s 			page 19


 691              	.LVL72:
 362:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 363:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 364:Src/usbd_conf.c ****  
 365:Src/usbd_conf.c ****   hal_status = HAL_PCD_Stop(pdev->pData);
 692              		.loc 1 365 0
 693 0002 D0F82002 		ldr	r0, [r0, #544]
 694              	.LVL73:
 695 0006 FFF7FEFF 		bl	HAL_PCD_Stop
 696              	.LVL74:
 366:Src/usbd_conf.c ****      
 367:Src/usbd_conf.c ****   switch (hal_status) {
 697              		.loc 1 367 0
 698 000a 18B1     		cbz	r0, .L63
 699 000c 0228     		cmp	r0, #2
 700 000e 03D0     		beq	.L64
 368:Src/usbd_conf.c ****     case HAL_OK :
 369:Src/usbd_conf.c ****       usb_status = USBD_OK;
 370:Src/usbd_conf.c ****     break;
 371:Src/usbd_conf.c ****     case HAL_ERROR :
 372:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 701              		.loc 1 372 0
 702 0010 0220     		movs	r0, #2
 703              	.LVL75:
 373:Src/usbd_conf.c ****     break;
 374:Src/usbd_conf.c ****     case HAL_BUSY :
 375:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 376:Src/usbd_conf.c ****     break;
 377:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 378:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 379:Src/usbd_conf.c ****     break;
 380:Src/usbd_conf.c ****     default :
 381:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 382:Src/usbd_conf.c ****     break;
 383:Src/usbd_conf.c ****   }
 384:Src/usbd_conf.c ****   return usb_status; 
 385:Src/usbd_conf.c **** }
 704              		.loc 1 385 0
 705 0012 08BD     		pop	{r3, pc}
 706              	.LVL76:
 707              	.L63:
 369:Src/usbd_conf.c ****     break;
 708              		.loc 1 369 0
 709 0014 0020     		movs	r0, #0
 710              	.LVL77:
 711 0016 08BD     		pop	{r3, pc}
 712              	.LVL78:
 713              	.L64:
 375:Src/usbd_conf.c ****     break;
 714              		.loc 1 375 0
 715 0018 0120     		movs	r0, #1
 716              	.LVL79:
 376:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 717              		.loc 1 376 0
 718 001a 08BD     		pop	{r3, pc}
 719              		.cfi_endproc
 720              	.LFE80:
ARM GAS  /tmp/cc95W0MT.s 			page 20


 722              		.section	.text.USBD_LL_OpenEP,"ax",%progbits
 723              		.align	1
 724              		.global	USBD_LL_OpenEP
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 728              		.fpu softvfp
 730              	USBD_LL_OpenEP:
 731              	.LFB81:
 386:Src/usbd_conf.c **** 
 387:Src/usbd_conf.c **** /**
 388:Src/usbd_conf.c ****   * @brief  Opens an endpoint of the Low Level Driver.
 389:Src/usbd_conf.c ****   * @param  pdev: Device handle
 390:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 391:Src/usbd_conf.c ****   * @param  ep_type: Endpoint Type
 392:Src/usbd_conf.c ****   * @param  ep_mps: Endpoint Max Packet Size
 393:Src/usbd_conf.c ****   * @retval USBD Status
 394:Src/usbd_conf.c ****   */
 395:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_OpenEP  (USBD_HandleTypeDef *pdev, 
 396:Src/usbd_conf.c ****                                       uint8_t  ep_addr,                                      
 397:Src/usbd_conf.c ****                                       uint8_t  ep_type,
 398:Src/usbd_conf.c ****                                       uint16_t ep_mps)
 399:Src/usbd_conf.c **** {
 732              		.loc 1 399 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              	.LVL80:
 737 0000 10B5     		push	{r4, lr}
 738              	.LCFI19:
 739              		.cfi_def_cfa_offset 8
 740              		.cfi_offset 4, -8
 741              		.cfi_offset 14, -4
 742 0002 1C46     		mov	r4, r3
 743              	.LVL81:
 400:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 401:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 402:Src/usbd_conf.c **** 
 403:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Open(pdev->pData, 
 744              		.loc 1 403 0
 745 0004 1346     		mov	r3, r2
 746              	.LVL82:
 747 0006 2246     		mov	r2, r4
 748              	.LVL83:
 749 0008 D0F82002 		ldr	r0, [r0, #544]
 750              	.LVL84:
 751 000c FFF7FEFF 		bl	HAL_PCD_EP_Open
 752              	.LVL85:
 404:Src/usbd_conf.c ****                                ep_addr, 
 405:Src/usbd_conf.c ****                                ep_mps, 
 406:Src/usbd_conf.c ****                                ep_type);
 407:Src/usbd_conf.c ****   
 408:Src/usbd_conf.c ****      
 409:Src/usbd_conf.c ****   switch (hal_status) {
 753              		.loc 1 409 0
 754 0010 18B1     		cbz	r0, .L70
 755 0012 0228     		cmp	r0, #2
ARM GAS  /tmp/cc95W0MT.s 			page 21


 756 0014 03D0     		beq	.L71
 410:Src/usbd_conf.c ****     case HAL_OK :
 411:Src/usbd_conf.c ****       usb_status = USBD_OK;
 412:Src/usbd_conf.c ****     break;
 413:Src/usbd_conf.c ****     case HAL_ERROR :
 414:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 757              		.loc 1 414 0
 758 0016 0220     		movs	r0, #2
 759              	.LVL86:
 415:Src/usbd_conf.c ****     break;
 416:Src/usbd_conf.c ****     case HAL_BUSY :
 417:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 418:Src/usbd_conf.c ****     break;
 419:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 420:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 421:Src/usbd_conf.c ****     break;
 422:Src/usbd_conf.c ****     default :
 423:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 424:Src/usbd_conf.c ****     break;
 425:Src/usbd_conf.c ****   }
 426:Src/usbd_conf.c ****   return usb_status; 
 427:Src/usbd_conf.c **** }
 760              		.loc 1 427 0
 761 0018 10BD     		pop	{r4, pc}
 762              	.LVL87:
 763              	.L70:
 411:Src/usbd_conf.c ****     break;
 764              		.loc 1 411 0
 765 001a 0020     		movs	r0, #0
 766              	.LVL88:
 767 001c 10BD     		pop	{r4, pc}
 768              	.LVL89:
 769              	.L71:
 417:Src/usbd_conf.c ****     break;
 770              		.loc 1 417 0
 771 001e 0120     		movs	r0, #1
 772              	.LVL90:
 418:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 773              		.loc 1 418 0
 774 0020 10BD     		pop	{r4, pc}
 775              		.cfi_endproc
 776              	.LFE81:
 778              		.section	.text.USBD_LL_CloseEP,"ax",%progbits
 779              		.align	1
 780              		.global	USBD_LL_CloseEP
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu softvfp
 786              	USBD_LL_CloseEP:
 787              	.LFB82:
 428:Src/usbd_conf.c **** 
 429:Src/usbd_conf.c **** /**
 430:Src/usbd_conf.c ****   * @brief  Closes an endpoint of the Low Level Driver.
 431:Src/usbd_conf.c ****   * @param  pdev: Device handle
 432:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 433:Src/usbd_conf.c ****   * @retval USBD Status
ARM GAS  /tmp/cc95W0MT.s 			page 22


 434:Src/usbd_conf.c ****   */
 435:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_CloseEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 436:Src/usbd_conf.c **** {
 788              		.loc 1 436 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              	.LVL91:
 793 0000 08B5     		push	{r3, lr}
 794              	.LCFI20:
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 3, -8
 797              		.cfi_offset 14, -4
 798              	.LVL92:
 437:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 438:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 439:Src/usbd_conf.c ****   
 440:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 799              		.loc 1 440 0
 800 0002 D0F82002 		ldr	r0, [r0, #544]
 801              	.LVL93:
 802 0006 FFF7FEFF 		bl	HAL_PCD_EP_Close
 803              	.LVL94:
 441:Src/usbd_conf.c ****       
 442:Src/usbd_conf.c ****   switch (hal_status) {
 804              		.loc 1 442 0
 805 000a 18B1     		cbz	r0, .L77
 806 000c 0228     		cmp	r0, #2
 807 000e 03D0     		beq	.L78
 443:Src/usbd_conf.c ****     case HAL_OK :
 444:Src/usbd_conf.c ****       usb_status = USBD_OK;
 445:Src/usbd_conf.c ****     break;
 446:Src/usbd_conf.c ****     case HAL_ERROR :
 447:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 808              		.loc 1 447 0
 809 0010 0220     		movs	r0, #2
 810              	.LVL95:
 448:Src/usbd_conf.c ****     break;
 449:Src/usbd_conf.c ****     case HAL_BUSY :
 450:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 451:Src/usbd_conf.c ****     break;
 452:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 453:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 454:Src/usbd_conf.c ****     break;
 455:Src/usbd_conf.c ****     default :
 456:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 457:Src/usbd_conf.c ****     break;
 458:Src/usbd_conf.c ****   }
 459:Src/usbd_conf.c ****   return usb_status;  
 460:Src/usbd_conf.c **** }
 811              		.loc 1 460 0
 812 0012 08BD     		pop	{r3, pc}
 813              	.LVL96:
 814              	.L77:
 444:Src/usbd_conf.c ****     break;
 815              		.loc 1 444 0
 816 0014 0020     		movs	r0, #0
ARM GAS  /tmp/cc95W0MT.s 			page 23


 817              	.LVL97:
 818 0016 08BD     		pop	{r3, pc}
 819              	.LVL98:
 820              	.L78:
 450:Src/usbd_conf.c ****     break;
 821              		.loc 1 450 0
 822 0018 0120     		movs	r0, #1
 823              	.LVL99:
 451:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 824              		.loc 1 451 0
 825 001a 08BD     		pop	{r3, pc}
 826              		.cfi_endproc
 827              	.LFE82:
 829              		.section	.text.USBD_LL_FlushEP,"ax",%progbits
 830              		.align	1
 831              		.global	USBD_LL_FlushEP
 832              		.syntax unified
 833              		.thumb
 834              		.thumb_func
 835              		.fpu softvfp
 837              	USBD_LL_FlushEP:
 838              	.LFB83:
 461:Src/usbd_conf.c **** 
 462:Src/usbd_conf.c **** /**
 463:Src/usbd_conf.c ****   * @brief  Flushes an endpoint of the Low Level Driver.
 464:Src/usbd_conf.c ****   * @param  pdev: Device handle
 465:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 466:Src/usbd_conf.c ****   * @retval USBD Status
 467:Src/usbd_conf.c ****   */
 468:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_FlushEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 469:Src/usbd_conf.c **** {
 839              		.loc 1 469 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              	.LVL100:
 844 0000 08B5     		push	{r3, lr}
 845              	.LCFI21:
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 3, -8
 848              		.cfi_offset 14, -4
 849              	.LVL101:
 470:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 471:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 472:Src/usbd_conf.c ****   
 473:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Flush(pdev->pData, ep_addr);
 850              		.loc 1 473 0
 851 0002 D0F82002 		ldr	r0, [r0, #544]
 852              	.LVL102:
 853 0006 FFF7FEFF 		bl	HAL_PCD_EP_Flush
 854              	.LVL103:
 474:Src/usbd_conf.c ****       
 475:Src/usbd_conf.c ****   switch (hal_status) {
 855              		.loc 1 475 0
 856 000a 18B1     		cbz	r0, .L84
 857 000c 0228     		cmp	r0, #2
 858 000e 03D0     		beq	.L85
ARM GAS  /tmp/cc95W0MT.s 			page 24


 476:Src/usbd_conf.c ****     case HAL_OK :
 477:Src/usbd_conf.c ****       usb_status = USBD_OK;
 478:Src/usbd_conf.c ****     break;
 479:Src/usbd_conf.c ****     case HAL_ERROR :
 480:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 859              		.loc 1 480 0
 860 0010 0220     		movs	r0, #2
 861              	.LVL104:
 481:Src/usbd_conf.c ****     break;
 482:Src/usbd_conf.c ****     case HAL_BUSY :
 483:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 484:Src/usbd_conf.c ****     break;
 485:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 486:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 487:Src/usbd_conf.c ****     break;
 488:Src/usbd_conf.c ****     default :
 489:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 490:Src/usbd_conf.c ****     break;
 491:Src/usbd_conf.c ****   }
 492:Src/usbd_conf.c ****   return usb_status;  
 493:Src/usbd_conf.c **** }
 862              		.loc 1 493 0
 863 0012 08BD     		pop	{r3, pc}
 864              	.LVL105:
 865              	.L84:
 477:Src/usbd_conf.c ****     break;
 866              		.loc 1 477 0
 867 0014 0020     		movs	r0, #0
 868              	.LVL106:
 869 0016 08BD     		pop	{r3, pc}
 870              	.LVL107:
 871              	.L85:
 483:Src/usbd_conf.c ****     break;
 872              		.loc 1 483 0
 873 0018 0120     		movs	r0, #1
 874              	.LVL108:
 484:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 875              		.loc 1 484 0
 876 001a 08BD     		pop	{r3, pc}
 877              		.cfi_endproc
 878              	.LFE83:
 880              		.section	.text.USBD_LL_StallEP,"ax",%progbits
 881              		.align	1
 882              		.global	USBD_LL_StallEP
 883              		.syntax unified
 884              		.thumb
 885              		.thumb_func
 886              		.fpu softvfp
 888              	USBD_LL_StallEP:
 889              	.LFB84:
 494:Src/usbd_conf.c **** 
 495:Src/usbd_conf.c **** /**
 496:Src/usbd_conf.c ****   * @brief  Sets a Stall condition on an endpoint of the Low Level Driver.
 497:Src/usbd_conf.c ****   * @param  pdev: Device handle
 498:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 499:Src/usbd_conf.c ****   * @retval USBD Status
 500:Src/usbd_conf.c ****   */
ARM GAS  /tmp/cc95W0MT.s 			page 25


 501:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_StallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 502:Src/usbd_conf.c **** {
 890              		.loc 1 502 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894              	.LVL109:
 895 0000 08B5     		push	{r3, lr}
 896              	.LCFI22:
 897              		.cfi_def_cfa_offset 8
 898              		.cfi_offset 3, -8
 899              		.cfi_offset 14, -4
 900              	.LVL110:
 503:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 504:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 505:Src/usbd_conf.c ****   
 506:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 901              		.loc 1 506 0
 902 0002 D0F82002 		ldr	r0, [r0, #544]
 903              	.LVL111:
 904 0006 FFF7FEFF 		bl	HAL_PCD_EP_SetStall
 905              	.LVL112:
 507:Src/usbd_conf.c ****       
 508:Src/usbd_conf.c ****   switch (hal_status) {
 906              		.loc 1 508 0
 907 000a 18B1     		cbz	r0, .L91
 908 000c 0228     		cmp	r0, #2
 909 000e 03D0     		beq	.L92
 509:Src/usbd_conf.c ****     case HAL_OK :
 510:Src/usbd_conf.c ****       usb_status = USBD_OK;
 511:Src/usbd_conf.c ****     break;
 512:Src/usbd_conf.c ****     case HAL_ERROR :
 513:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 910              		.loc 1 513 0
 911 0010 0220     		movs	r0, #2
 912              	.LVL113:
 514:Src/usbd_conf.c ****     break;
 515:Src/usbd_conf.c ****     case HAL_BUSY :
 516:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 517:Src/usbd_conf.c ****     break;
 518:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 519:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 520:Src/usbd_conf.c ****     break;
 521:Src/usbd_conf.c ****     default :
 522:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 523:Src/usbd_conf.c ****     break;
 524:Src/usbd_conf.c ****   }
 525:Src/usbd_conf.c ****   return usb_status;  
 526:Src/usbd_conf.c **** }
 913              		.loc 1 526 0
 914 0012 08BD     		pop	{r3, pc}
 915              	.LVL114:
 916              	.L91:
 510:Src/usbd_conf.c ****     break;
 917              		.loc 1 510 0
 918 0014 0020     		movs	r0, #0
 919              	.LVL115:
ARM GAS  /tmp/cc95W0MT.s 			page 26


 920 0016 08BD     		pop	{r3, pc}
 921              	.LVL116:
 922              	.L92:
 516:Src/usbd_conf.c ****     break;
 923              		.loc 1 516 0
 924 0018 0120     		movs	r0, #1
 925              	.LVL117:
 517:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 926              		.loc 1 517 0
 927 001a 08BD     		pop	{r3, pc}
 928              		.cfi_endproc
 929              	.LFE84:
 931              		.section	.text.USBD_LL_ClearStallEP,"ax",%progbits
 932              		.align	1
 933              		.global	USBD_LL_ClearStallEP
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu softvfp
 939              	USBD_LL_ClearStallEP:
 940              	.LFB85:
 527:Src/usbd_conf.c **** 
 528:Src/usbd_conf.c **** /**
 529:Src/usbd_conf.c ****   * @brief  Clears a Stall condition on an endpoint of the Low Level Driver.
 530:Src/usbd_conf.c ****   * @param  pdev: Device handle
 531:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 532:Src/usbd_conf.c ****   * @retval USBD Status
 533:Src/usbd_conf.c ****   */
 534:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_ClearStallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 535:Src/usbd_conf.c **** {
 941              		.loc 1 535 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945              	.LVL118:
 946 0000 08B5     		push	{r3, lr}
 947              	.LCFI23:
 948              		.cfi_def_cfa_offset 8
 949              		.cfi_offset 3, -8
 950              		.cfi_offset 14, -4
 951              	.LVL119:
 536:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 537:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 538:Src/usbd_conf.c ****   
 539:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);  
 952              		.loc 1 539 0
 953 0002 D0F82002 		ldr	r0, [r0, #544]
 954              	.LVL120:
 955 0006 FFF7FEFF 		bl	HAL_PCD_EP_ClrStall
 956              	.LVL121:
 540:Src/usbd_conf.c ****      
 541:Src/usbd_conf.c ****   switch (hal_status) {
 957              		.loc 1 541 0
 958 000a 18B1     		cbz	r0, .L98
 959 000c 0228     		cmp	r0, #2
 960 000e 03D0     		beq	.L99
 542:Src/usbd_conf.c ****     case HAL_OK :
ARM GAS  /tmp/cc95W0MT.s 			page 27


 543:Src/usbd_conf.c ****       usb_status = USBD_OK;
 544:Src/usbd_conf.c ****     break;
 545:Src/usbd_conf.c ****     case HAL_ERROR :
 546:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 961              		.loc 1 546 0
 962 0010 0220     		movs	r0, #2
 963              	.LVL122:
 547:Src/usbd_conf.c ****     break;
 548:Src/usbd_conf.c ****     case HAL_BUSY :
 549:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 550:Src/usbd_conf.c ****     break;
 551:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 552:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 553:Src/usbd_conf.c ****     break;
 554:Src/usbd_conf.c ****     default :
 555:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 556:Src/usbd_conf.c ****     break;
 557:Src/usbd_conf.c ****   }
 558:Src/usbd_conf.c ****   return usb_status; 
 559:Src/usbd_conf.c **** }
 964              		.loc 1 559 0
 965 0012 08BD     		pop	{r3, pc}
 966              	.LVL123:
 967              	.L98:
 543:Src/usbd_conf.c ****     break;
 968              		.loc 1 543 0
 969 0014 0020     		movs	r0, #0
 970              	.LVL124:
 971 0016 08BD     		pop	{r3, pc}
 972              	.LVL125:
 973              	.L99:
 549:Src/usbd_conf.c ****     break;
 974              		.loc 1 549 0
 975 0018 0120     		movs	r0, #1
 976              	.LVL126:
 550:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 977              		.loc 1 550 0
 978 001a 08BD     		pop	{r3, pc}
 979              		.cfi_endproc
 980              	.LFE85:
 982              		.section	.text.USBD_LL_IsStallEP,"ax",%progbits
 983              		.align	1
 984              		.global	USBD_LL_IsStallEP
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 988              		.fpu softvfp
 990              	USBD_LL_IsStallEP:
 991              	.LFB86:
 560:Src/usbd_conf.c **** 
 561:Src/usbd_conf.c **** /**
 562:Src/usbd_conf.c ****   * @brief  Returns Stall condition.
 563:Src/usbd_conf.c ****   * @param  pdev: Device handle
 564:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 565:Src/usbd_conf.c ****   * @retval Stall (1: Yes, 0: No)
 566:Src/usbd_conf.c ****   */
 567:Src/usbd_conf.c **** uint8_t USBD_LL_IsStallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
ARM GAS  /tmp/cc95W0MT.s 			page 28


 568:Src/usbd_conf.c **** {
 992              		.loc 1 568 0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
 996              		@ link register save eliminated.
 997              	.LVL127:
 569:Src/usbd_conf.c ****   PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 998              		.loc 1 569 0
 999 0000 D0F82022 		ldr	r2, [r0, #544]
 1000              	.LVL128:
 570:Src/usbd_conf.c ****   
 571:Src/usbd_conf.c ****   if((ep_addr & 0x80) == 0x80)
 1001              		.loc 1 571 0
 1002 0004 11F0800F 		tst	r1, #128
 1003 0008 06D1     		bne	.L106
 572:Src/usbd_conf.c ****   {
 573:Src/usbd_conf.c ****     return hpcd->IN_ep[ep_addr & 0x7F].is_stall; 
 574:Src/usbd_conf.c ****   }
 575:Src/usbd_conf.c ****   else
 576:Src/usbd_conf.c ****   {
 577:Src/usbd_conf.c ****     return hpcd->OUT_ep[ep_addr & 0x7F].is_stall; 
 1004              		.loc 1 577 0
 1005 000a 01F07F01 		and	r1, r1, #127
 1006              	.LVL129:
 1007 000e 02EB4111 		add	r1, r2, r1, lsl #5
 1008 0012 91F82A02 		ldrb	r0, [r1, #554]	@ zero_extendqisi2
 1009              	.LVL130:
 578:Src/usbd_conf.c ****   }
 579:Src/usbd_conf.c **** }
 1010              		.loc 1 579 0
 1011 0016 7047     		bx	lr
 1012              	.LVL131:
 1013              	.L106:
 573:Src/usbd_conf.c ****   }
 1014              		.loc 1 573 0
 1015 0018 01F07F03 		and	r3, r1, #127
 1016 001c 02EB4311 		add	r1, r2, r3, lsl #5
 1017              	.LVL132:
 1018 0020 91F82A00 		ldrb	r0, [r1, #42]	@ zero_extendqisi2
 1019              	.LVL133:
 1020 0024 7047     		bx	lr
 1021              		.cfi_endproc
 1022              	.LFE86:
 1024              		.section	.text.USBD_LL_SetUSBAddress,"ax",%progbits
 1025              		.align	1
 1026              		.global	USBD_LL_SetUSBAddress
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1030              		.fpu softvfp
 1032              	USBD_LL_SetUSBAddress:
 1033              	.LFB87:
 580:Src/usbd_conf.c **** /**
 581:Src/usbd_conf.c ****   * @brief  Assigns a USB address to the device.
 582:Src/usbd_conf.c ****   * @param  pdev: Device handle
 583:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
ARM GAS  /tmp/cc95W0MT.s 			page 29


 584:Src/usbd_conf.c ****   * @retval USBD Status
 585:Src/usbd_conf.c ****   */
 586:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_SetUSBAddress (USBD_HandleTypeDef *pdev, uint8_t dev_addr)   
 587:Src/usbd_conf.c **** {
 1034              		.loc 1 587 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 1038              	.LVL134:
 1039 0000 08B5     		push	{r3, lr}
 1040              	.LCFI24:
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 3, -8
 1043              		.cfi_offset 14, -4
 1044              	.LVL135:
 588:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 589:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 590:Src/usbd_conf.c ****   
 591:Src/usbd_conf.c ****   hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 1045              		.loc 1 591 0
 1046 0002 D0F82002 		ldr	r0, [r0, #544]
 1047              	.LVL136:
 1048 0006 FFF7FEFF 		bl	HAL_PCD_SetAddress
 1049              	.LVL137:
 592:Src/usbd_conf.c ****      
 593:Src/usbd_conf.c ****   switch (hal_status) {
 1050              		.loc 1 593 0
 1051 000a 18B1     		cbz	r0, .L109
 1052 000c 0228     		cmp	r0, #2
 1053 000e 03D0     		beq	.L110
 594:Src/usbd_conf.c ****     case HAL_OK :
 595:Src/usbd_conf.c ****       usb_status = USBD_OK;
 596:Src/usbd_conf.c ****     break;
 597:Src/usbd_conf.c ****     case HAL_ERROR :
 598:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1054              		.loc 1 598 0
 1055 0010 0220     		movs	r0, #2
 1056              	.LVL138:
 599:Src/usbd_conf.c ****     break;
 600:Src/usbd_conf.c ****     case HAL_BUSY :
 601:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 602:Src/usbd_conf.c ****     break;
 603:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 604:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 605:Src/usbd_conf.c ****     break;
 606:Src/usbd_conf.c ****     default :
 607:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 608:Src/usbd_conf.c ****     break;
 609:Src/usbd_conf.c ****   }
 610:Src/usbd_conf.c ****   return usb_status;  
 611:Src/usbd_conf.c **** }
 1057              		.loc 1 611 0
 1058 0012 08BD     		pop	{r3, pc}
 1059              	.LVL139:
 1060              	.L109:
 595:Src/usbd_conf.c ****     break;
 1061              		.loc 1 595 0
ARM GAS  /tmp/cc95W0MT.s 			page 30


 1062 0014 0020     		movs	r0, #0
 1063              	.LVL140:
 1064 0016 08BD     		pop	{r3, pc}
 1065              	.LVL141:
 1066              	.L110:
 601:Src/usbd_conf.c ****     break;
 1067              		.loc 1 601 0
 1068 0018 0120     		movs	r0, #1
 1069              	.LVL142:
 602:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 1070              		.loc 1 602 0
 1071 001a 08BD     		pop	{r3, pc}
 1072              		.cfi_endproc
 1073              	.LFE87:
 1075              		.section	.text.USBD_LL_Transmit,"ax",%progbits
 1076              		.align	1
 1077              		.global	USBD_LL_Transmit
 1078              		.syntax unified
 1079              		.thumb
 1080              		.thumb_func
 1081              		.fpu softvfp
 1083              	USBD_LL_Transmit:
 1084              	.LFB88:
 612:Src/usbd_conf.c **** 
 613:Src/usbd_conf.c **** /**
 614:Src/usbd_conf.c ****   * @brief  Transmits data over an endpoint.
 615:Src/usbd_conf.c ****   * @param  pdev: Device handle
 616:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 617:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be sent
 618:Src/usbd_conf.c ****   * @param  size: Data size    
 619:Src/usbd_conf.c ****   * @retval USBD Status
 620:Src/usbd_conf.c ****   */
 621:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Transmit (USBD_HandleTypeDef *pdev, 
 622:Src/usbd_conf.c ****                                       uint8_t  ep_addr,                                      
 623:Src/usbd_conf.c ****                                       uint8_t  *pbuf,
 624:Src/usbd_conf.c ****                                       uint16_t  size)
 625:Src/usbd_conf.c **** {
 1085              		.loc 1 625 0
 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 0
 1088              		@ frame_needed = 0, uses_anonymous_args = 0
 1089              	.LVL143:
 1090 0000 08B5     		push	{r3, lr}
 1091              	.LCFI25:
 1092              		.cfi_def_cfa_offset 8
 1093              		.cfi_offset 3, -8
 1094              		.cfi_offset 14, -4
 1095              	.LVL144:
 626:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 627:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 628:Src/usbd_conf.c **** 
 629:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 1096              		.loc 1 629 0
 1097 0002 D0F82002 		ldr	r0, [r0, #544]
 1098              	.LVL145:
 1099 0006 FFF7FEFF 		bl	HAL_PCD_EP_Transmit
 1100              	.LVL146:
ARM GAS  /tmp/cc95W0MT.s 			page 31


 630:Src/usbd_conf.c ****      
 631:Src/usbd_conf.c ****   switch (hal_status) {
 1101              		.loc 1 631 0
 1102 000a 18B1     		cbz	r0, .L116
 1103 000c 0228     		cmp	r0, #2
 1104 000e 03D0     		beq	.L117
 632:Src/usbd_conf.c ****     case HAL_OK :
 633:Src/usbd_conf.c ****       usb_status = USBD_OK;
 634:Src/usbd_conf.c ****     break;
 635:Src/usbd_conf.c ****     case HAL_ERROR :
 636:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1105              		.loc 1 636 0
 1106 0010 0220     		movs	r0, #2
 1107              	.LVL147:
 637:Src/usbd_conf.c ****     break;
 638:Src/usbd_conf.c ****     case HAL_BUSY :
 639:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 640:Src/usbd_conf.c ****     break;
 641:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 642:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 643:Src/usbd_conf.c ****     break;
 644:Src/usbd_conf.c ****     default :
 645:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 646:Src/usbd_conf.c ****     break;
 647:Src/usbd_conf.c ****   }
 648:Src/usbd_conf.c ****   return usb_status;    
 649:Src/usbd_conf.c **** }
 1108              		.loc 1 649 0
 1109 0012 08BD     		pop	{r3, pc}
 1110              	.LVL148:
 1111              	.L116:
 633:Src/usbd_conf.c ****     break;
 1112              		.loc 1 633 0
 1113 0014 0020     		movs	r0, #0
 1114              	.LVL149:
 1115 0016 08BD     		pop	{r3, pc}
 1116              	.LVL150:
 1117              	.L117:
 639:Src/usbd_conf.c ****     break;
 1118              		.loc 1 639 0
 1119 0018 0120     		movs	r0, #1
 1120              	.LVL151:
 640:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 1121              		.loc 1 640 0
 1122 001a 08BD     		pop	{r3, pc}
 1123              		.cfi_endproc
 1124              	.LFE88:
 1126              		.section	.text.USBD_LL_PrepareReceive,"ax",%progbits
 1127              		.align	1
 1128              		.global	USBD_LL_PrepareReceive
 1129              		.syntax unified
 1130              		.thumb
 1131              		.thumb_func
 1132              		.fpu softvfp
 1134              	USBD_LL_PrepareReceive:
 1135              	.LFB89:
 650:Src/usbd_conf.c **** 
ARM GAS  /tmp/cc95W0MT.s 			page 32


 651:Src/usbd_conf.c **** /**
 652:Src/usbd_conf.c ****   * @brief  Prepares an endpoint for reception.
 653:Src/usbd_conf.c ****   * @param  pdev: Device handle
 654:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 655:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be received
 656:Src/usbd_conf.c ****   * @param  size: Data size
 657:Src/usbd_conf.c ****   * @retval USBD Status
 658:Src/usbd_conf.c ****   */
 659:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, 
 660:Src/usbd_conf.c ****                                            uint8_t  ep_addr,                                      
 661:Src/usbd_conf.c ****                                            uint8_t  *pbuf,
 662:Src/usbd_conf.c ****                                            uint16_t  size)
 663:Src/usbd_conf.c **** {
 1136              		.loc 1 663 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              	.LVL152:
 1141 0000 08B5     		push	{r3, lr}
 1142              	.LCFI26:
 1143              		.cfi_def_cfa_offset 8
 1144              		.cfi_offset 3, -8
 1145              		.cfi_offset 14, -4
 1146              	.LVL153:
 664:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 665:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 666:Src/usbd_conf.c **** 
 667:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 1147              		.loc 1 667 0
 1148 0002 D0F82002 		ldr	r0, [r0, #544]
 1149              	.LVL154:
 1150 0006 FFF7FEFF 		bl	HAL_PCD_EP_Receive
 1151              	.LVL155:
 668:Src/usbd_conf.c ****      
 669:Src/usbd_conf.c ****   switch (hal_status) {
 1152              		.loc 1 669 0
 1153 000a 18B1     		cbz	r0, .L123
 1154 000c 0228     		cmp	r0, #2
 1155 000e 03D0     		beq	.L124
 670:Src/usbd_conf.c ****     case HAL_OK :
 671:Src/usbd_conf.c ****       usb_status = USBD_OK;
 672:Src/usbd_conf.c ****     break;
 673:Src/usbd_conf.c ****     case HAL_ERROR :
 674:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1156              		.loc 1 674 0
 1157 0010 0220     		movs	r0, #2
 1158              	.LVL156:
 675:Src/usbd_conf.c ****     break;
 676:Src/usbd_conf.c ****     case HAL_BUSY :
 677:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 678:Src/usbd_conf.c ****     break;
 679:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 680:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 681:Src/usbd_conf.c ****     break;
 682:Src/usbd_conf.c ****     default :
 683:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 684:Src/usbd_conf.c ****     break;
ARM GAS  /tmp/cc95W0MT.s 			page 33


 685:Src/usbd_conf.c ****   }
 686:Src/usbd_conf.c ****   return usb_status; 
 687:Src/usbd_conf.c **** }
 1159              		.loc 1 687 0
 1160 0012 08BD     		pop	{r3, pc}
 1161              	.LVL157:
 1162              	.L123:
 671:Src/usbd_conf.c ****     break;
 1163              		.loc 1 671 0
 1164 0014 0020     		movs	r0, #0
 1165              	.LVL158:
 1166 0016 08BD     		pop	{r3, pc}
 1167              	.LVL159:
 1168              	.L124:
 677:Src/usbd_conf.c ****     break;
 1169              		.loc 1 677 0
 1170 0018 0120     		movs	r0, #1
 1171              	.LVL160:
 678:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 1172              		.loc 1 678 0
 1173 001a 08BD     		pop	{r3, pc}
 1174              		.cfi_endproc
 1175              	.LFE89:
 1177              		.section	.text.USBD_LL_GetRxDataSize,"ax",%progbits
 1178              		.align	1
 1179              		.global	USBD_LL_GetRxDataSize
 1180              		.syntax unified
 1181              		.thumb
 1182              		.thumb_func
 1183              		.fpu softvfp
 1185              	USBD_LL_GetRxDataSize:
 1186              	.LFB90:
 688:Src/usbd_conf.c **** 
 689:Src/usbd_conf.c **** /**
 690:Src/usbd_conf.c ****   * @brief  Returns the last transfered packet size.
 691:Src/usbd_conf.c ****   * @param  pdev: Device handle
 692:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 693:Src/usbd_conf.c ****   * @retval Recived Data Size
 694:Src/usbd_conf.c ****   */
 695:Src/usbd_conf.c **** uint32_t USBD_LL_GetRxDataSize  (USBD_HandleTypeDef *pdev, uint8_t  ep_addr)  
 696:Src/usbd_conf.c **** {
 1187              		.loc 1 696 0
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 0, uses_anonymous_args = 0
 1191              	.LVL161:
 1192 0000 08B5     		push	{r3, lr}
 1193              	.LCFI27:
 1194              		.cfi_def_cfa_offset 8
 1195              		.cfi_offset 3, -8
 1196              		.cfi_offset 14, -4
 697:Src/usbd_conf.c ****   return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 1197              		.loc 1 697 0
 1198 0002 D0F82002 		ldr	r0, [r0, #544]
 1199              	.LVL162:
 1200 0006 FFF7FEFF 		bl	HAL_PCD_EP_GetRxCount
 1201              	.LVL163:
ARM GAS  /tmp/cc95W0MT.s 			page 34


 698:Src/usbd_conf.c **** }
 1202              		.loc 1 698 0
 1203 000a 08BD     		pop	{r3, pc}
 1204              		.cfi_endproc
 1205              	.LFE90:
 1207              		.section	.text.USBD_LL_Delay,"ax",%progbits
 1208              		.align	1
 1209              		.global	USBD_LL_Delay
 1210              		.syntax unified
 1211              		.thumb
 1212              		.thumb_func
 1213              		.fpu softvfp
 1215              	USBD_LL_Delay:
 1216              	.LFB91:
 699:Src/usbd_conf.c **** 
 700:Src/usbd_conf.c **** /**
 701:Src/usbd_conf.c ****   * @brief  Delays routine for the USB Device Library.
 702:Src/usbd_conf.c ****   * @param  Delay: Delay in ms
 703:Src/usbd_conf.c ****   * @retval None
 704:Src/usbd_conf.c ****   */
 705:Src/usbd_conf.c **** void  USBD_LL_Delay (uint32_t Delay)
 706:Src/usbd_conf.c **** {
 1217              		.loc 1 706 0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 0
 1220              		@ frame_needed = 0, uses_anonymous_args = 0
 1221              	.LVL164:
 1222 0000 08B5     		push	{r3, lr}
 1223              	.LCFI28:
 1224              		.cfi_def_cfa_offset 8
 1225              		.cfi_offset 3, -8
 1226              		.cfi_offset 14, -4
 707:Src/usbd_conf.c ****   HAL_Delay(Delay);  
 1227              		.loc 1 707 0
 1228 0002 FFF7FEFF 		bl	HAL_Delay
 1229              	.LVL165:
 1230 0006 08BD     		pop	{r3, pc}
 1231              		.cfi_endproc
 1232              	.LFE91:
 1234              		.section	.text.USBD_static_malloc,"ax",%progbits
 1235              		.align	1
 1236              		.global	USBD_static_malloc
 1237              		.syntax unified
 1238              		.thumb
 1239              		.thumb_func
 1240              		.fpu softvfp
 1242              	USBD_static_malloc:
 1243              	.LFB92:
 708:Src/usbd_conf.c **** }
 709:Src/usbd_conf.c **** 
 710:Src/usbd_conf.c **** /**
 711:Src/usbd_conf.c ****   * @brief  static single allocation.
 712:Src/usbd_conf.c ****   * @param  size: size of allocated memory
 713:Src/usbd_conf.c ****   * @retval None
 714:Src/usbd_conf.c ****   */
 715:Src/usbd_conf.c **** void *USBD_static_malloc(uint32_t size)
 716:Src/usbd_conf.c **** {
ARM GAS  /tmp/cc95W0MT.s 			page 35


 1244              		.loc 1 716 0
 1245              		.cfi_startproc
 1246              		@ args = 0, pretend = 0, frame = 0
 1247              		@ frame_needed = 0, uses_anonymous_args = 0
 1248              		@ link register save eliminated.
 1249              	.LVL166:
 717:Src/usbd_conf.c ****   static uint32_t mem[(sizeof(USBD_HID_HandleTypeDef)/4)+1];/* On 32-bit boundary */
 718:Src/usbd_conf.c ****   return mem;
 719:Src/usbd_conf.c **** }
 1250              		.loc 1 719 0
 1251 0000 0048     		ldr	r0, .L133
 1252              	.LVL167:
 1253 0002 7047     		bx	lr
 1254              	.L134:
 1255              		.align	2
 1256              	.L133:
 1257 0004 00000000 		.word	.LANCHOR0
 1258              		.cfi_endproc
 1259              	.LFE92:
 1261              		.section	.text.USBD_static_free,"ax",%progbits
 1262              		.align	1
 1263              		.global	USBD_static_free
 1264              		.syntax unified
 1265              		.thumb
 1266              		.thumb_func
 1267              		.fpu softvfp
 1269              	USBD_static_free:
 1270              	.LFB93:
 720:Src/usbd_conf.c **** 
 721:Src/usbd_conf.c **** /**
 722:Src/usbd_conf.c ****   * @brief  Dummy memory free
 723:Src/usbd_conf.c ****   * @param  *p pointer to allocated  memory address
 724:Src/usbd_conf.c ****   * @retval None
 725:Src/usbd_conf.c ****   */
 726:Src/usbd_conf.c **** void USBD_static_free(void *p)
 727:Src/usbd_conf.c **** {
 1271              		.loc 1 727 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 0
 1274              		@ frame_needed = 0, uses_anonymous_args = 0
 1275              		@ link register save eliminated.
 1276              	.LVL168:
 1277 0000 7047     		bx	lr
 1278              		.cfi_endproc
 1279              	.LFE93:
 1281              		.section	.text.HAL_PCDEx_SetConnectionState,"ax",%progbits
 1282              		.align	1
 1283              		.global	HAL_PCDEx_SetConnectionState
 1284              		.syntax unified
 1285              		.thumb
 1286              		.thumb_func
 1287              		.fpu softvfp
 1289              	HAL_PCDEx_SetConnectionState:
 1290              	.LFB94:
 728:Src/usbd_conf.c **** 
 729:Src/usbd_conf.c **** }
 730:Src/usbd_conf.c **** 
ARM GAS  /tmp/cc95W0MT.s 			page 36


 731:Src/usbd_conf.c **** /**
 732:Src/usbd_conf.c **** * @brief Software Device Connection
 733:Src/usbd_conf.c **** * @param hpcd: PCD handle
 734:Src/usbd_conf.c **** * @param state: connection state (0 : disconnected / 1: connected) 
 735:Src/usbd_conf.c **** * @retval None
 736:Src/usbd_conf.c **** */
 737:Src/usbd_conf.c **** void HAL_PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state)
 738:Src/usbd_conf.c **** {
 1291              		.loc 1 738 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 0
 1294              		@ frame_needed = 0, uses_anonymous_args = 0
 1295              		@ link register save eliminated.
 1296              	.LVL169:
 1297 0000 7047     		bx	lr
 1298              		.cfi_endproc
 1299              	.LFE94:
 1301              		.comm	hpcd_USB_FS,1120,4
 1302              		.section	.bss.mem.7623,"aw",%nobits
 1303              		.align	2
 1304              		.set	.LANCHOR0,. + 0
 1307              	mem.7623:
 1308 0000 00000000 		.space	20
 1308      00000000 
 1308      00000000 
 1308      00000000 
 1308      00000000 
 1309              		.section	.rodata.USBD_LL_Init.str1.4,"aMS",%progbits,1
 1310              		.align	2
 1311              	.LC0:
 1312 0000 5372632F 		.ascii	"Src/usbd_conf.c\000"
 1312      75736264 
 1312      5F636F6E 
 1312      662E6300 
 1313              		.text
 1314              	.Letext0:
 1315              		.file 2 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/machine/_defau
 1316              		.file 3 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_stdint.h"
 1317              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1318              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1319              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1320              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1321              		.file 8 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/lock.h"
 1322              		.file 9 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_types.h"
 1323              		.file 10 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/lib/gcc/arm-none-eabi/6.3.1/include
 1324              		.file 11 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/reent.h"
 1325              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1326              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usb.h"
 1327              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pcd.h"
 1328              		.file 15 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/stdlib.h"
 1329              		.file 16 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1330              		.file 17 "Middlewares/ST/STM32_USB_Device_Library/Class/HID/Inc/usbd_hid.h"
 1331              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1332              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pcd_ex.h"
 1333              		.file 20 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_core.h"
 1334              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/cc95W0MT.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_conf.c
     /tmp/cc95W0MT.s:16     .text.HAL_PCD_MspInit:0000000000000000 $t
     /tmp/cc95W0MT.s:23     .text.HAL_PCD_MspInit:0000000000000000 HAL_PCD_MspInit
     /tmp/cc95W0MT.s:77     .text.HAL_PCD_MspInit:000000000000003c $d
     /tmp/cc95W0MT.s:82     .text.HAL_PCD_MspDeInit:0000000000000000 $t
     /tmp/cc95W0MT.s:89     .text.HAL_PCD_MspDeInit:0000000000000000 HAL_PCD_MspDeInit
     /tmp/cc95W0MT.s:126    .text.HAL_PCD_MspDeInit:0000000000000020 $d
     /tmp/cc95W0MT.s:132    .text.HAL_PCD_SetupStageCallback:0000000000000000 $t
     /tmp/cc95W0MT.s:139    .text.HAL_PCD_SetupStageCallback:0000000000000000 HAL_PCD_SetupStageCallback
     /tmp/cc95W0MT.s:162    .text.HAL_PCD_DataOutStageCallback:0000000000000000 $t
     /tmp/cc95W0MT.s:169    .text.HAL_PCD_DataOutStageCallback:0000000000000000 HAL_PCD_DataOutStageCallback
     /tmp/cc95W0MT.s:193    .text.HAL_PCD_DataInStageCallback:0000000000000000 $t
     /tmp/cc95W0MT.s:200    .text.HAL_PCD_DataInStageCallback:0000000000000000 HAL_PCD_DataInStageCallback
     /tmp/cc95W0MT.s:224    .text.HAL_PCD_SOFCallback:0000000000000000 $t
     /tmp/cc95W0MT.s:231    .text.HAL_PCD_SOFCallback:0000000000000000 HAL_PCD_SOFCallback
     /tmp/cc95W0MT.s:253    .text.HAL_PCD_ResetCallback:0000000000000000 $t
     /tmp/cc95W0MT.s:260    .text.HAL_PCD_ResetCallback:0000000000000000 HAL_PCD_ResetCallback
     /tmp/cc95W0MT.s:289    .text.HAL_PCD_SuspendCallback:0000000000000000 $t
     /tmp/cc95W0MT.s:296    .text.HAL_PCD_SuspendCallback:0000000000000000 HAL_PCD_SuspendCallback
     /tmp/cc95W0MT.s:328    .text.HAL_PCD_SuspendCallback:000000000000001c $d
     /tmp/cc95W0MT.s:333    .text.HAL_PCD_ResumeCallback:0000000000000000 $t
     /tmp/cc95W0MT.s:340    .text.HAL_PCD_ResumeCallback:0000000000000000 HAL_PCD_ResumeCallback
     /tmp/cc95W0MT.s:362    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 $t
     /tmp/cc95W0MT.s:369    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 HAL_PCD_ISOOUTIncompleteCallback
     /tmp/cc95W0MT.s:391    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 $t
     /tmp/cc95W0MT.s:398    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 HAL_PCD_ISOINIncompleteCallback
     /tmp/cc95W0MT.s:420    .text.HAL_PCD_ConnectCallback:0000000000000000 $t
     /tmp/cc95W0MT.s:427    .text.HAL_PCD_ConnectCallback:0000000000000000 HAL_PCD_ConnectCallback
     /tmp/cc95W0MT.s:449    .text.HAL_PCD_DisconnectCallback:0000000000000000 $t
     /tmp/cc95W0MT.s:456    .text.HAL_PCD_DisconnectCallback:0000000000000000 HAL_PCD_DisconnectCallback
     /tmp/cc95W0MT.s:478    .text.USBD_LL_Init:0000000000000000 $t
     /tmp/cc95W0MT.s:485    .text.USBD_LL_Init:0000000000000000 USBD_LL_Init
     /tmp/cc95W0MT.s:563    .text.USBD_LL_Init:0000000000000068 $d
                            *COM*:0000000000000460 hpcd_USB_FS
     /tmp/cc95W0MT.s:570    .text.USBD_LL_DeInit:0000000000000000 $t
     /tmp/cc95W0MT.s:577    .text.USBD_LL_DeInit:0000000000000000 USBD_LL_DeInit
     /tmp/cc95W0MT.s:621    .text.USBD_LL_Start:0000000000000000 $t
     /tmp/cc95W0MT.s:628    .text.USBD_LL_Start:0000000000000000 USBD_LL_Start
     /tmp/cc95W0MT.s:672    .text.USBD_LL_Stop:0000000000000000 $t
     /tmp/cc95W0MT.s:679    .text.USBD_LL_Stop:0000000000000000 USBD_LL_Stop
     /tmp/cc95W0MT.s:723    .text.USBD_LL_OpenEP:0000000000000000 $t
     /tmp/cc95W0MT.s:730    .text.USBD_LL_OpenEP:0000000000000000 USBD_LL_OpenEP
     /tmp/cc95W0MT.s:779    .text.USBD_LL_CloseEP:0000000000000000 $t
     /tmp/cc95W0MT.s:786    .text.USBD_LL_CloseEP:0000000000000000 USBD_LL_CloseEP
     /tmp/cc95W0MT.s:830    .text.USBD_LL_FlushEP:0000000000000000 $t
     /tmp/cc95W0MT.s:837    .text.USBD_LL_FlushEP:0000000000000000 USBD_LL_FlushEP
     /tmp/cc95W0MT.s:881    .text.USBD_LL_StallEP:0000000000000000 $t
     /tmp/cc95W0MT.s:888    .text.USBD_LL_StallEP:0000000000000000 USBD_LL_StallEP
     /tmp/cc95W0MT.s:932    .text.USBD_LL_ClearStallEP:0000000000000000 $t
     /tmp/cc95W0MT.s:939    .text.USBD_LL_ClearStallEP:0000000000000000 USBD_LL_ClearStallEP
     /tmp/cc95W0MT.s:983    .text.USBD_LL_IsStallEP:0000000000000000 $t
     /tmp/cc95W0MT.s:990    .text.USBD_LL_IsStallEP:0000000000000000 USBD_LL_IsStallEP
     /tmp/cc95W0MT.s:1025   .text.USBD_LL_SetUSBAddress:0000000000000000 $t
     /tmp/cc95W0MT.s:1032   .text.USBD_LL_SetUSBAddress:0000000000000000 USBD_LL_SetUSBAddress
     /tmp/cc95W0MT.s:1076   .text.USBD_LL_Transmit:0000000000000000 $t
     /tmp/cc95W0MT.s:1083   .text.USBD_LL_Transmit:0000000000000000 USBD_LL_Transmit
ARM GAS  /tmp/cc95W0MT.s 			page 38


     /tmp/cc95W0MT.s:1127   .text.USBD_LL_PrepareReceive:0000000000000000 $t
     /tmp/cc95W0MT.s:1134   .text.USBD_LL_PrepareReceive:0000000000000000 USBD_LL_PrepareReceive
     /tmp/cc95W0MT.s:1178   .text.USBD_LL_GetRxDataSize:0000000000000000 $t
     /tmp/cc95W0MT.s:1185   .text.USBD_LL_GetRxDataSize:0000000000000000 USBD_LL_GetRxDataSize
     /tmp/cc95W0MT.s:1208   .text.USBD_LL_Delay:0000000000000000 $t
     /tmp/cc95W0MT.s:1215   .text.USBD_LL_Delay:0000000000000000 USBD_LL_Delay
     /tmp/cc95W0MT.s:1235   .text.USBD_static_malloc:0000000000000000 $t
     /tmp/cc95W0MT.s:1242   .text.USBD_static_malloc:0000000000000000 USBD_static_malloc
     /tmp/cc95W0MT.s:1257   .text.USBD_static_malloc:0000000000000004 $d
     /tmp/cc95W0MT.s:1262   .text.USBD_static_free:0000000000000000 $t
     /tmp/cc95W0MT.s:1269   .text.USBD_static_free:0000000000000000 USBD_static_free
     /tmp/cc95W0MT.s:1282   .text.HAL_PCDEx_SetConnectionState:0000000000000000 $t
     /tmp/cc95W0MT.s:1289   .text.HAL_PCDEx_SetConnectionState:0000000000000000 HAL_PCDEx_SetConnectionState
     /tmp/cc95W0MT.s:1303   .bss.mem.7623:0000000000000000 $d
     /tmp/cc95W0MT.s:1307   .bss.mem.7623:0000000000000000 mem.7623
     /tmp/cc95W0MT.s:1310   .rodata.USBD_LL_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
USBD_LL_SetupStage
USBD_LL_DataOutStage
USBD_LL_DataInStage
USBD_LL_SOF
USBD_LL_SetSpeed
USBD_LL_Reset
USBD_LL_Suspend
USBD_LL_Resume
USBD_LL_IsoOUTIncomplete
USBD_LL_IsoINIncomplete
USBD_LL_DevConnected
USBD_LL_DevDisconnected
HAL_PCD_Init
HAL_PCDEx_PMAConfig
_Error_Handler
HAL_PCD_DeInit
HAL_PCD_Start
HAL_PCD_Stop
HAL_PCD_EP_Open
HAL_PCD_EP_Close
HAL_PCD_EP_Flush
HAL_PCD_EP_SetStall
HAL_PCD_EP_ClrStall
HAL_PCD_SetAddress
HAL_PCD_EP_Transmit
HAL_PCD_EP_Receive
HAL_PCD_EP_GetRxCount
HAL_Delay
