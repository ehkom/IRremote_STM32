ARM GAS  /tmp/ccZhqWJo.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usbd_desc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.USBD_FS_DeviceDescriptor,"ax",%progbits
  16              		.align	1
  17              		.global	USBD_FS_DeviceDescriptor
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	USBD_FS_DeviceDescriptor:
  24              	.LFB64:
  25              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** /**
   2:Src/usbd_desc.c ****   ******************************************************************************
   3:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   4:Src/usbd_desc.c ****   * @version        : v2.0_Cube
   5:Src/usbd_desc.c ****   * @brief          : This file implements the USB Device descriptors
   6:Src/usbd_desc.c ****   ******************************************************************************
   7:Src/usbd_desc.c ****   * This notice applies to any and all portions of this file
   8:Src/usbd_desc.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usbd_desc.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usbd_desc.c ****   * inserted by the user or by software development tools
  11:Src/usbd_desc.c ****   * are owned by their respective copyright owners.
  12:Src/usbd_desc.c ****   *
  13:Src/usbd_desc.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  14:Src/usbd_desc.c ****   * All rights reserved.
  15:Src/usbd_desc.c ****   *
  16:Src/usbd_desc.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usbd_desc.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usbd_desc.c ****   *
  19:Src/usbd_desc.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usbd_desc.c ****   *    this list of conditions and the following disclaimer.
  21:Src/usbd_desc.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usbd_desc.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usbd_desc.c ****   *    and/or other materials provided with the distribution.
  24:Src/usbd_desc.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usbd_desc.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usbd_desc.c ****   *    derived from this software without specific written permission.
  27:Src/usbd_desc.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usbd_desc.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usbd_desc.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/usbd_desc.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usbd_desc.c ****   *    this license is void and will automatically terminate your rights under 
  32:Src/usbd_desc.c ****   *    this license. 
  33:Src/usbd_desc.c ****   *
ARM GAS  /tmp/ccZhqWJo.s 			page 2


  34:Src/usbd_desc.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usbd_desc.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usbd_desc.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usbd_desc.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usbd_desc.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usbd_desc.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usbd_desc.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usbd_desc.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usbd_desc.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usbd_desc.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usbd_desc.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usbd_desc.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usbd_desc.c ****   *
  47:Src/usbd_desc.c ****   ******************************************************************************
  48:Src/usbd_desc.c **** */
  49:Src/usbd_desc.c **** 
  50:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  51:Src/usbd_desc.c **** #include "usbd_core.h"
  52:Src/usbd_desc.c **** #include "usbd_desc.h"
  53:Src/usbd_desc.c **** #include "usbd_conf.h"
  54:Src/usbd_desc.c **** 
  55:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  56:Src/usbd_desc.c ****   * @{
  57:Src/usbd_desc.c ****   */
  58:Src/usbd_desc.c **** 
  59:Src/usbd_desc.c **** /** @defgroup USBD_DESC 
  60:Src/usbd_desc.c ****   * @brief USBD descriptors module
  61:Src/usbd_desc.c ****   * @{
  62:Src/usbd_desc.c ****   */ 
  63:Src/usbd_desc.c **** 
  64:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions
  65:Src/usbd_desc.c ****   * @{
  66:Src/usbd_desc.c ****   */ 
  67:Src/usbd_desc.c **** /**
  68:Src/usbd_desc.c ****   * @}
  69:Src/usbd_desc.c ****   */ 
  70:Src/usbd_desc.c **** 
  71:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines
  72:Src/usbd_desc.c ****   * @{
  73:Src/usbd_desc.c ****   */ 
  74:Src/usbd_desc.c **** #define USBD_VID     1155
  75:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  76:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "STMicroelectronics"
  77:Src/usbd_desc.c **** #define USBD_PID_FS     22315
  78:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING_FS     "STM32 Human interface"
  79:Src/usbd_desc.c **** #define USBD_SERIALNUMBER_STRING_FS     "00000000001A"
  80:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING_FS     "HID Config"
  81:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING_FS     "HID Interface"
  82:Src/usbd_desc.c **** 
  83:Src/usbd_desc.c **** /* USER CODE BEGIN 0 */
  84:Src/usbd_desc.c **** 
  85:Src/usbd_desc.c **** /* USER CODE END 0*/
  86:Src/usbd_desc.c **** /**
  87:Src/usbd_desc.c ****   * @}
  88:Src/usbd_desc.c ****   */ 
  89:Src/usbd_desc.c **** 
  90:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros
ARM GAS  /tmp/ccZhqWJo.s 			page 3


  91:Src/usbd_desc.c ****   * @{
  92:Src/usbd_desc.c ****   */ 
  93:Src/usbd_desc.c **** /**
  94:Src/usbd_desc.c ****   * @}
  95:Src/usbd_desc.c ****   */ 
  96:Src/usbd_desc.c **** 
  97:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables
  98:Src/usbd_desc.c ****   * @{
  99:Src/usbd_desc.c ****   */ 
 100:Src/usbd_desc.c **** uint8_t *     USBD_FS_DeviceDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
 101:Src/usbd_desc.c **** uint8_t *     USBD_FS_LangIDStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
 102:Src/usbd_desc.c **** uint8_t *     USBD_FS_ManufacturerStrDescriptor ( USBD_SpeedTypeDef speed , uint16_t *length);
 103:Src/usbd_desc.c **** uint8_t *     USBD_FS_ProductStrDescriptor ( USBD_SpeedTypeDef speed , uint16_t *length);
 104:Src/usbd_desc.c **** uint8_t *     USBD_FS_SerialStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
 105:Src/usbd_desc.c **** uint8_t *     USBD_FS_ConfigStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
 106:Src/usbd_desc.c **** uint8_t *     USBD_FS_InterfaceStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
 107:Src/usbd_desc.c **** 
 108:Src/usbd_desc.c **** #ifdef USB_SUPPORT_USER_STRING_DESC
 109:Src/usbd_desc.c **** uint8_t *     USBD_FS_USRStringDesc (USBD_SpeedTypeDef speed, uint8_t idx , uint16_t *length);  
 110:Src/usbd_desc.c **** #endif /* USB_SUPPORT_USER_STRING_DESC */  
 111:Src/usbd_desc.c **** 
 112:Src/usbd_desc.c **** USBD_DescriptorsTypeDef FS_Desc =
 113:Src/usbd_desc.c **** {
 114:Src/usbd_desc.c ****   USBD_FS_DeviceDescriptor,
 115:Src/usbd_desc.c ****   USBD_FS_LangIDStrDescriptor, 
 116:Src/usbd_desc.c ****   USBD_FS_ManufacturerStrDescriptor,
 117:Src/usbd_desc.c ****   USBD_FS_ProductStrDescriptor,
 118:Src/usbd_desc.c ****   USBD_FS_SerialStrDescriptor,
 119:Src/usbd_desc.c ****   USBD_FS_ConfigStrDescriptor,
 120:Src/usbd_desc.c ****   USBD_FS_InterfaceStrDescriptor,
 121:Src/usbd_desc.c **** };
 122:Src/usbd_desc.c **** 
 123:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 124:Src/usbd_desc.c ****   #pragma data_alignment=4   
 125:Src/usbd_desc.c **** #endif
 126:Src/usbd_desc.c **** /* USB Standard Device Descriptor */
 127:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 128:Src/usbd_desc.c ****   {
 129:Src/usbd_desc.c ****     0x12,                       /*bLength */
 130:Src/usbd_desc.c ****     USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 131:Src/usbd_desc.c ****     0x00,                       /* bcdUSB */  
 132:Src/usbd_desc.c ****     0x02,
 133:Src/usbd_desc.c ****     0x00,                       /*bDeviceClass*/
 134:Src/usbd_desc.c ****     0x00,                       /*bDeviceSubClass*/
 135:Src/usbd_desc.c ****     0x00,                       /*bDeviceProtocol*/
 136:Src/usbd_desc.c ****     USB_MAX_EP0_SIZE,          /*bMaxPacketSize*/
 137:Src/usbd_desc.c ****     LOBYTE(USBD_VID),           /*idVendor*/
 138:Src/usbd_desc.c ****     HIBYTE(USBD_VID),           /*idVendor*/
 139:Src/usbd_desc.c ****     LOBYTE(USBD_PID_FS),           /*idVendor*/
 140:Src/usbd_desc.c ****     HIBYTE(USBD_PID_FS),           /*idVendor*/
 141:Src/usbd_desc.c ****     0x00,                       /*bcdDevice rel. 2.00*/
 142:Src/usbd_desc.c ****     0x02,
 143:Src/usbd_desc.c ****     USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 144:Src/usbd_desc.c ****     USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 145:Src/usbd_desc.c ****     USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 146:Src/usbd_desc.c ****     USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 147:Src/usbd_desc.c ****   } ; 
ARM GAS  /tmp/ccZhqWJo.s 			page 4


 148:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 149:Src/usbd_desc.c **** 
 150:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 151:Src/usbd_desc.c ****   #pragma data_alignment=4   
 152:Src/usbd_desc.c **** #endif
 153:Src/usbd_desc.c **** 
 154:Src/usbd_desc.c **** /* USB Standard Device Descriptor */
 155:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 156:Src/usbd_desc.c **** {
 157:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,         
 158:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,       
 159:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 160:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING), 
 161:Src/usbd_desc.c **** };
 162:Src/usbd_desc.c **** 
 163:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 164:Src/usbd_desc.c ****   #pragma data_alignment=4   
 165:Src/usbd_desc.c **** #endif
 166:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 167:Src/usbd_desc.c **** /**
 168:Src/usbd_desc.c ****   * @}
 169:Src/usbd_desc.c ****   */ 
 170:Src/usbd_desc.c **** 
 171:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes
 172:Src/usbd_desc.c ****   * @{
 173:Src/usbd_desc.c ****   */ 
 174:Src/usbd_desc.c **** /**
 175:Src/usbd_desc.c ****   * @}
 176:Src/usbd_desc.c ****   */ 
 177:Src/usbd_desc.c **** 
 178:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions
 179:Src/usbd_desc.c ****   * @{
 180:Src/usbd_desc.c ****   */ 
 181:Src/usbd_desc.c **** 
 182:Src/usbd_desc.c **** /**
 183:Src/usbd_desc.c **** * @brief  USBD_FS_DeviceDescriptor 
 184:Src/usbd_desc.c **** *         return the device descriptor
 185:Src/usbd_desc.c **** * @param  speed : current device speed
 186:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 187:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 188:Src/usbd_desc.c **** */
 189:Src/usbd_desc.c **** uint8_t *  USBD_FS_DeviceDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 190:Src/usbd_desc.c **** {
  26              		.loc 1 190 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 191:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  32              		.loc 1 191 0
  33 0000 1223     		movs	r3, #18
  34 0002 0B80     		strh	r3, [r1]	@ movhi
 192:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
 193:Src/usbd_desc.c **** }
  35              		.loc 1 193 0
  36 0004 0048     		ldr	r0, .L2
ARM GAS  /tmp/ccZhqWJo.s 			page 5


  37              	.LVL1:
  38 0006 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 0008 00000000 		.word	.LANCHOR0
  43              		.cfi_endproc
  44              	.LFE64:
  46              		.section	.text.USBD_FS_LangIDStrDescriptor,"ax",%progbits
  47              		.align	1
  48              		.global	USBD_FS_LangIDStrDescriptor
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu softvfp
  54              	USBD_FS_LangIDStrDescriptor:
  55              	.LFB65:
 194:Src/usbd_desc.c **** 
 195:Src/usbd_desc.c **** /**
 196:Src/usbd_desc.c **** * @brief  USBD_FS_LangIDStrDescriptor 
 197:Src/usbd_desc.c **** *         return the LangID string descriptor
 198:Src/usbd_desc.c **** * @param  speed : current device speed
 199:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 200:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 201:Src/usbd_desc.c **** */
 202:Src/usbd_desc.c **** uint8_t *  USBD_FS_LangIDStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 203:Src/usbd_desc.c **** {
  56              		.loc 1 203 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL2:
 204:Src/usbd_desc.c ****   *length =  sizeof(USBD_LangIDDesc);  
  62              		.loc 1 204 0
  63 0000 0423     		movs	r3, #4
  64 0002 0B80     		strh	r3, [r1]	@ movhi
 205:Src/usbd_desc.c ****   return USBD_LangIDDesc;
 206:Src/usbd_desc.c **** }
  65              		.loc 1 206 0
  66 0004 0048     		ldr	r0, .L5
  67              	.LVL3:
  68 0006 7047     		bx	lr
  69              	.L6:
  70              		.align	2
  71              	.L5:
  72 0008 00000000 		.word	.LANCHOR1
  73              		.cfi_endproc
  74              	.LFE65:
  76              		.section	.text.USBD_FS_ProductStrDescriptor,"ax",%progbits
  77              		.align	1
  78              		.global	USBD_FS_ProductStrDescriptor
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu softvfp
  84              	USBD_FS_ProductStrDescriptor:
ARM GAS  /tmp/ccZhqWJo.s 			page 6


  85              	.LFB66:
 207:Src/usbd_desc.c **** 
 208:Src/usbd_desc.c **** /**
 209:Src/usbd_desc.c **** * @brief  USBD_FS_ProductStrDescriptor 
 210:Src/usbd_desc.c **** *         return the product string descriptor
 211:Src/usbd_desc.c **** * @param  speed : current device speed
 212:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 213:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 214:Src/usbd_desc.c **** */
 215:Src/usbd_desc.c **** uint8_t *  USBD_FS_ProductStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 216:Src/usbd_desc.c **** {
  86              		.loc 1 216 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL4:
  91 0000 08B5     		push	{r3, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 3, -8
  95              		.cfi_offset 14, -4
  96 0002 0A46     		mov	r2, r1
 217:Src/usbd_desc.c ****   if(speed == 0)
  97              		.loc 1 217 0
  98 0004 28B1     		cbz	r0, .L11
 218:Src/usbd_desc.c ****   {   
 219:Src/usbd_desc.c ****     USBD_GetString (USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 220:Src/usbd_desc.c ****   }
 221:Src/usbd_desc.c ****   else
 222:Src/usbd_desc.c ****   {
 223:Src/usbd_desc.c ****     USBD_GetString (USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);    
  99              		.loc 1 223 0
 100 0006 0549     		ldr	r1, .L12
 101              	.LVL5:
 102 0008 0548     		ldr	r0, .L12+4
 103              	.LVL6:
 104 000a FFF7FEFF 		bl	USBD_GetString
 105              	.LVL7:
 106              	.L9:
 224:Src/usbd_desc.c ****   }
 225:Src/usbd_desc.c ****   return USBD_StrDesc;
 226:Src/usbd_desc.c **** }
 107              		.loc 1 226 0
 108 000e 0348     		ldr	r0, .L12
 109 0010 08BD     		pop	{r3, pc}
 110              	.LVL8:
 111              	.L11:
 219:Src/usbd_desc.c ****   }
 112              		.loc 1 219 0
 113 0012 0249     		ldr	r1, .L12
 114              	.LVL9:
 115 0014 0248     		ldr	r0, .L12+4
 116              	.LVL10:
 117 0016 FFF7FEFF 		bl	USBD_GetString
 118              	.LVL11:
 119 001a F8E7     		b	.L9
 120              	.L13:
ARM GAS  /tmp/ccZhqWJo.s 			page 7


 121              		.align	2
 122              	.L12:
 123 001c 00000000 		.word	USBD_StrDesc
 124 0020 00000000 		.word	.LC0
 125              		.cfi_endproc
 126              	.LFE66:
 128              		.section	.text.USBD_FS_ManufacturerStrDescriptor,"ax",%progbits
 129              		.align	1
 130              		.global	USBD_FS_ManufacturerStrDescriptor
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu softvfp
 136              	USBD_FS_ManufacturerStrDescriptor:
 137              	.LFB67:
 227:Src/usbd_desc.c **** 
 228:Src/usbd_desc.c **** /**
 229:Src/usbd_desc.c **** * @brief  USBD_FS_ManufacturerStrDescriptor 
 230:Src/usbd_desc.c **** *         return the manufacturer string descriptor
 231:Src/usbd_desc.c **** * @param  speed : current device speed
 232:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 233:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 234:Src/usbd_desc.c **** */
 235:Src/usbd_desc.c **** uint8_t *  USBD_FS_ManufacturerStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 236:Src/usbd_desc.c **** {
 138              		.loc 1 236 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              	.LVL12:
 143 0000 10B5     		push	{r4, lr}
 144              	.LCFI1:
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 4, -8
 147              		.cfi_offset 14, -4
 237:Src/usbd_desc.c ****   USBD_GetString (USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 148              		.loc 1 237 0
 149 0002 044C     		ldr	r4, .L16
 150 0004 0A46     		mov	r2, r1
 151 0006 2146     		mov	r1, r4
 152              	.LVL13:
 153 0008 0348     		ldr	r0, .L16+4
 154              	.LVL14:
 155 000a FFF7FEFF 		bl	USBD_GetString
 156              	.LVL15:
 238:Src/usbd_desc.c ****   return USBD_StrDesc;
 239:Src/usbd_desc.c **** }
 157              		.loc 1 239 0
 158 000e 2046     		mov	r0, r4
 159 0010 10BD     		pop	{r4, pc}
 160              	.L17:
 161 0012 00BF     		.align	2
 162              	.L16:
 163 0014 00000000 		.word	USBD_StrDesc
 164 0018 00000000 		.word	.LC1
 165              		.cfi_endproc
 166              	.LFE67:
ARM GAS  /tmp/ccZhqWJo.s 			page 8


 168              		.section	.text.USBD_FS_SerialStrDescriptor,"ax",%progbits
 169              		.align	1
 170              		.global	USBD_FS_SerialStrDescriptor
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu softvfp
 176              	USBD_FS_SerialStrDescriptor:
 177              	.LFB68:
 240:Src/usbd_desc.c **** 
 241:Src/usbd_desc.c **** /**
 242:Src/usbd_desc.c **** * @brief  USBD_FS_SerialStrDescriptor 
 243:Src/usbd_desc.c **** *         return the serial number string descriptor
 244:Src/usbd_desc.c **** * @param  speed : current device speed
 245:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 246:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 247:Src/usbd_desc.c **** */
 248:Src/usbd_desc.c **** uint8_t *  USBD_FS_SerialStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 249:Src/usbd_desc.c **** {
 178              		.loc 1 249 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              	.LVL16:
 183 0000 08B5     		push	{r3, lr}
 184              	.LCFI2:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 3, -8
 187              		.cfi_offset 14, -4
 188 0002 0A46     		mov	r2, r1
 250:Src/usbd_desc.c ****   if(speed  == USBD_SPEED_HIGH)
 189              		.loc 1 250 0
 190 0004 28B1     		cbz	r0, .L22
 251:Src/usbd_desc.c ****   {    
 252:Src/usbd_desc.c ****     USBD_GetString (USBD_SERIALNUMBER_STRING_FS, USBD_StrDesc, length);
 253:Src/usbd_desc.c ****   }
 254:Src/usbd_desc.c ****   else
 255:Src/usbd_desc.c ****   {
 256:Src/usbd_desc.c ****     USBD_GetString (USBD_SERIALNUMBER_STRING_FS, USBD_StrDesc, length);    
 191              		.loc 1 256 0
 192 0006 0549     		ldr	r1, .L23
 193              	.LVL17:
 194 0008 0548     		ldr	r0, .L23+4
 195              	.LVL18:
 196 000a FFF7FEFF 		bl	USBD_GetString
 197              	.LVL19:
 198              	.L20:
 257:Src/usbd_desc.c ****   }
 258:Src/usbd_desc.c ****   return USBD_StrDesc;
 259:Src/usbd_desc.c **** }
 199              		.loc 1 259 0
 200 000e 0348     		ldr	r0, .L23
 201 0010 08BD     		pop	{r3, pc}
 202              	.LVL20:
 203              	.L22:
 252:Src/usbd_desc.c ****   }
 204              		.loc 1 252 0
ARM GAS  /tmp/ccZhqWJo.s 			page 9


 205 0012 0249     		ldr	r1, .L23
 206              	.LVL21:
 207 0014 0248     		ldr	r0, .L23+4
 208              	.LVL22:
 209 0016 FFF7FEFF 		bl	USBD_GetString
 210              	.LVL23:
 211 001a F8E7     		b	.L20
 212              	.L24:
 213              		.align	2
 214              	.L23:
 215 001c 00000000 		.word	USBD_StrDesc
 216 0020 00000000 		.word	.LC2
 217              		.cfi_endproc
 218              	.LFE68:
 220              		.section	.text.USBD_FS_ConfigStrDescriptor,"ax",%progbits
 221              		.align	1
 222              		.global	USBD_FS_ConfigStrDescriptor
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu softvfp
 228              	USBD_FS_ConfigStrDescriptor:
 229              	.LFB69:
 260:Src/usbd_desc.c **** 
 261:Src/usbd_desc.c **** /**
 262:Src/usbd_desc.c **** * @brief  USBD_FS_ConfigStrDescriptor 
 263:Src/usbd_desc.c **** *         return the configuration string descriptor
 264:Src/usbd_desc.c **** * @param  speed : current device speed
 265:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 266:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 267:Src/usbd_desc.c **** */
 268:Src/usbd_desc.c **** uint8_t *  USBD_FS_ConfigStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 269:Src/usbd_desc.c **** {
 230              		.loc 1 269 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              	.LVL24:
 235 0000 08B5     		push	{r3, lr}
 236              	.LCFI3:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 3, -8
 239              		.cfi_offset 14, -4
 240 0002 0A46     		mov	r2, r1
 270:Src/usbd_desc.c ****   if(speed  == USBD_SPEED_HIGH)
 241              		.loc 1 270 0
 242 0004 28B1     		cbz	r0, .L29
 271:Src/usbd_desc.c ****   {  
 272:Src/usbd_desc.c ****     USBD_GetString (USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 273:Src/usbd_desc.c ****   }
 274:Src/usbd_desc.c ****   else
 275:Src/usbd_desc.c ****   {
 276:Src/usbd_desc.c ****     USBD_GetString (USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length); 
 243              		.loc 1 276 0
 244 0006 0549     		ldr	r1, .L30
 245              	.LVL25:
 246 0008 0548     		ldr	r0, .L30+4
ARM GAS  /tmp/ccZhqWJo.s 			page 10


 247              	.LVL26:
 248 000a FFF7FEFF 		bl	USBD_GetString
 249              	.LVL27:
 250              	.L27:
 277:Src/usbd_desc.c ****   }
 278:Src/usbd_desc.c ****   return USBD_StrDesc;  
 279:Src/usbd_desc.c **** }
 251              		.loc 1 279 0
 252 000e 0348     		ldr	r0, .L30
 253 0010 08BD     		pop	{r3, pc}
 254              	.LVL28:
 255              	.L29:
 272:Src/usbd_desc.c ****   }
 256              		.loc 1 272 0
 257 0012 0249     		ldr	r1, .L30
 258              	.LVL29:
 259 0014 0248     		ldr	r0, .L30+4
 260              	.LVL30:
 261 0016 FFF7FEFF 		bl	USBD_GetString
 262              	.LVL31:
 263 001a F8E7     		b	.L27
 264              	.L31:
 265              		.align	2
 266              	.L30:
 267 001c 00000000 		.word	USBD_StrDesc
 268 0020 00000000 		.word	.LC3
 269              		.cfi_endproc
 270              	.LFE69:
 272              		.section	.text.USBD_FS_InterfaceStrDescriptor,"ax",%progbits
 273              		.align	1
 274              		.global	USBD_FS_InterfaceStrDescriptor
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu softvfp
 280              	USBD_FS_InterfaceStrDescriptor:
 281              	.LFB70:
 280:Src/usbd_desc.c **** 
 281:Src/usbd_desc.c **** /**
 282:Src/usbd_desc.c **** * @brief  USBD_HS_InterfaceStrDescriptor 
 283:Src/usbd_desc.c **** *         return the interface string descriptor
 284:Src/usbd_desc.c **** * @param  speed : current device speed
 285:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 286:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 287:Src/usbd_desc.c **** */
 288:Src/usbd_desc.c **** uint8_t *  USBD_FS_InterfaceStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 289:Src/usbd_desc.c **** {
 282              		.loc 1 289 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              	.LVL32:
 287 0000 08B5     		push	{r3, lr}
 288              	.LCFI4:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 3, -8
 291              		.cfi_offset 14, -4
ARM GAS  /tmp/ccZhqWJo.s 			page 11


 292 0002 0A46     		mov	r2, r1
 290:Src/usbd_desc.c ****   if(speed == 0)
 293              		.loc 1 290 0
 294 0004 28B1     		cbz	r0, .L36
 291:Src/usbd_desc.c ****   {
 292:Src/usbd_desc.c ****     USBD_GetString (USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 293:Src/usbd_desc.c ****   }
 294:Src/usbd_desc.c ****   else
 295:Src/usbd_desc.c ****   {
 296:Src/usbd_desc.c ****     USBD_GetString (USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 295              		.loc 1 296 0
 296 0006 0549     		ldr	r1, .L37
 297              	.LVL33:
 298 0008 0548     		ldr	r0, .L37+4
 299              	.LVL34:
 300 000a FFF7FEFF 		bl	USBD_GetString
 301              	.LVL35:
 302              	.L34:
 297:Src/usbd_desc.c ****   }
 298:Src/usbd_desc.c ****   return USBD_StrDesc;  
 299:Src/usbd_desc.c **** }
 303              		.loc 1 299 0
 304 000e 0348     		ldr	r0, .L37
 305 0010 08BD     		pop	{r3, pc}
 306              	.LVL36:
 307              	.L36:
 292:Src/usbd_desc.c ****   }
 308              		.loc 1 292 0
 309 0012 0249     		ldr	r1, .L37
 310              	.LVL37:
 311 0014 0248     		ldr	r0, .L37+4
 312              	.LVL38:
 313 0016 FFF7FEFF 		bl	USBD_GetString
 314              	.LVL39:
 315 001a F8E7     		b	.L34
 316              	.L38:
 317              		.align	2
 318              	.L37:
 319 001c 00000000 		.word	USBD_StrDesc
 320 0020 00000000 		.word	.LC4
 321              		.cfi_endproc
 322              	.LFE70:
 324              		.comm	USBD_StrDesc,512,4
 325              		.global	USBD_LangIDDesc
 326              		.global	USBD_FS_DeviceDesc
 327              		.global	FS_Desc
 328              		.section	.data.FS_Desc,"aw",%progbits
 329              		.align	2
 332              	FS_Desc:
 333 0000 00000000 		.word	USBD_FS_DeviceDescriptor
 334 0004 00000000 		.word	USBD_FS_LangIDStrDescriptor
 335 0008 00000000 		.word	USBD_FS_ManufacturerStrDescriptor
 336 000c 00000000 		.word	USBD_FS_ProductStrDescriptor
 337 0010 00000000 		.word	USBD_FS_SerialStrDescriptor
 338 0014 00000000 		.word	USBD_FS_ConfigStrDescriptor
 339 0018 00000000 		.word	USBD_FS_InterfaceStrDescriptor
 340              		.section	.data.USBD_FS_DeviceDesc,"aw",%progbits
ARM GAS  /tmp/ccZhqWJo.s 			page 12


 341              		.align	2
 342              		.set	.LANCHOR0,. + 0
 345              	USBD_FS_DeviceDesc:
 346 0000 12       		.byte	18
 347 0001 01       		.byte	1
 348 0002 00       		.byte	0
 349 0003 02       		.byte	2
 350 0004 00       		.byte	0
 351 0005 00       		.byte	0
 352 0006 00       		.byte	0
 353 0007 40       		.byte	64
 354 0008 83       		.byte	-125
 355 0009 04       		.byte	4
 356 000a 2B       		.byte	43
 357 000b 57       		.byte	87
 358 000c 00       		.byte	0
 359 000d 02       		.byte	2
 360 000e 01       		.byte	1
 361 000f 02       		.byte	2
 362 0010 03       		.byte	3
 363 0011 01       		.byte	1
 364              		.section	.data.USBD_LangIDDesc,"aw",%progbits
 365              		.align	2
 366              		.set	.LANCHOR1,. + 0
 369              	USBD_LangIDDesc:
 370 0000 04       		.byte	4
 371 0001 03       		.byte	3
 372 0002 09       		.byte	9
 373 0003 04       		.byte	4
 374              		.section	.rodata.USBD_FS_ConfigStrDescriptor.str1.4,"aMS",%progbits,1
 375              		.align	2
 376              	.LC3:
 377 0000 48494420 		.ascii	"HID Config\000"
 377      436F6E66 
 377      696700
 378              		.section	.rodata.USBD_FS_InterfaceStrDescriptor.str1.4,"aMS",%progbits,1
 379              		.align	2
 380              	.LC4:
 381 0000 48494420 		.ascii	"HID Interface\000"
 381      496E7465 
 381      72666163 
 381      6500
 382              		.section	.rodata.USBD_FS_ManufacturerStrDescriptor.str1.4,"aMS",%progbits,1
 383              		.align	2
 384              	.LC1:
 385 0000 53544D69 		.ascii	"STMicroelectronics\000"
 385      63726F65 
 385      6C656374 
 385      726F6E69 
 385      637300
 386              		.section	.rodata.USBD_FS_ProductStrDescriptor.str1.4,"aMS",%progbits,1
 387              		.align	2
 388              	.LC0:
 389 0000 53544D33 		.ascii	"STM32 Human interface\000"
 389      32204875 
 389      6D616E20 
 389      696E7465 
ARM GAS  /tmp/ccZhqWJo.s 			page 13


 389      72666163 
 390              		.section	.rodata.USBD_FS_SerialStrDescriptor.str1.4,"aMS",%progbits,1
 391              		.align	2
 392              	.LC2:
 393 0000 30303030 		.ascii	"00000000001A\000"
 393      30303030 
 393      30303141 
 393      00
 394              		.text
 395              	.Letext0:
 396              		.file 2 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/machine/_defau
 397              		.file 3 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/lock.h"
 398              		.file 4 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_types.h"
 399              		.file 5 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/lib/gcc/arm-none-eabi/6.3.1/include/
 400              		.file 6 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/reent.h"
 401              		.file 7 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_stdint.h"
 402              		.file 8 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/stdlib.h"
 403              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 404              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 405              		.file 11 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 406              		.file 12 "Inc/usbd_desc.h"
 407              		.file 13 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h"
ARM GAS  /tmp/ccZhqWJo.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_desc.c
     /tmp/ccZhqWJo.s:16     .text.USBD_FS_DeviceDescriptor:0000000000000000 $t
     /tmp/ccZhqWJo.s:23     .text.USBD_FS_DeviceDescriptor:0000000000000000 USBD_FS_DeviceDescriptor
     /tmp/ccZhqWJo.s:42     .text.USBD_FS_DeviceDescriptor:0000000000000008 $d
     /tmp/ccZhqWJo.s:47     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 $t
     /tmp/ccZhqWJo.s:54     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 USBD_FS_LangIDStrDescriptor
     /tmp/ccZhqWJo.s:72     .text.USBD_FS_LangIDStrDescriptor:0000000000000008 $d
     /tmp/ccZhqWJo.s:77     .text.USBD_FS_ProductStrDescriptor:0000000000000000 $t
     /tmp/ccZhqWJo.s:84     .text.USBD_FS_ProductStrDescriptor:0000000000000000 USBD_FS_ProductStrDescriptor
     /tmp/ccZhqWJo.s:123    .text.USBD_FS_ProductStrDescriptor:000000000000001c $d
                            *COM*:0000000000000200 USBD_StrDesc
     /tmp/ccZhqWJo.s:129    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 $t
     /tmp/ccZhqWJo.s:136    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 USBD_FS_ManufacturerStrDescriptor
     /tmp/ccZhqWJo.s:163    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000014 $d
     /tmp/ccZhqWJo.s:169    .text.USBD_FS_SerialStrDescriptor:0000000000000000 $t
     /tmp/ccZhqWJo.s:176    .text.USBD_FS_SerialStrDescriptor:0000000000000000 USBD_FS_SerialStrDescriptor
     /tmp/ccZhqWJo.s:215    .text.USBD_FS_SerialStrDescriptor:000000000000001c $d
     /tmp/ccZhqWJo.s:221    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 $t
     /tmp/ccZhqWJo.s:228    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 USBD_FS_ConfigStrDescriptor
     /tmp/ccZhqWJo.s:267    .text.USBD_FS_ConfigStrDescriptor:000000000000001c $d
     /tmp/ccZhqWJo.s:273    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 $t
     /tmp/ccZhqWJo.s:280    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 USBD_FS_InterfaceStrDescriptor
     /tmp/ccZhqWJo.s:319    .text.USBD_FS_InterfaceStrDescriptor:000000000000001c $d
     /tmp/ccZhqWJo.s:369    .data.USBD_LangIDDesc:0000000000000000 USBD_LangIDDesc
     /tmp/ccZhqWJo.s:345    .data.USBD_FS_DeviceDesc:0000000000000000 USBD_FS_DeviceDesc
     /tmp/ccZhqWJo.s:332    .data.FS_Desc:0000000000000000 FS_Desc
     /tmp/ccZhqWJo.s:329    .data.FS_Desc:0000000000000000 $d
     /tmp/ccZhqWJo.s:341    .data.USBD_FS_DeviceDesc:0000000000000000 $d
     /tmp/ccZhqWJo.s:365    .data.USBD_LangIDDesc:0000000000000000 $d
     /tmp/ccZhqWJo.s:375    .rodata.USBD_FS_ConfigStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccZhqWJo.s:379    .rodata.USBD_FS_InterfaceStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccZhqWJo.s:383    .rodata.USBD_FS_ManufacturerStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccZhqWJo.s:387    .rodata.USBD_FS_ProductStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccZhqWJo.s:391    .rodata.USBD_FS_SerialStrDescriptor.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
USBD_GetString
