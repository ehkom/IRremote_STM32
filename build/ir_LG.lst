ARM GAS  /tmp/ccjRoznA.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ir_LG.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.decodeLG,"ax",%progbits
  16              		.align	1
  17              		.global	decodeLG
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	decodeLG:
  24              	.LFB64:
  25              		.file 1 "Src/irremote/ir_LG.c"
   1:Src/irremote/ir_LG.c **** #include "IRremote.h"
   2:Src/irremote/ir_LG.c **** #include "IRremoteInt.h"
   3:Src/irremote/ir_LG.c **** 
   4:Src/irremote/ir_LG.c **** //==============================================================================
   5:Src/irremote/ir_LG.c **** //                               L       GGGG
   6:Src/irremote/ir_LG.c **** //                               L      G
   7:Src/irremote/ir_LG.c **** //                               L      G  GG
   8:Src/irremote/ir_LG.c **** //                               L      G   G
   9:Src/irremote/ir_LG.c **** //                               LLLLL   GGG
  10:Src/irremote/ir_LG.c **** //==============================================================================
  11:Src/irremote/ir_LG.c **** 
  12:Src/irremote/ir_LG.c **** #define LG_BITS 28
  13:Src/irremote/ir_LG.c **** 
  14:Src/irremote/ir_LG.c **** #define LG_HDR_MARK 8000
  15:Src/irremote/ir_LG.c **** #define LG_HDR_SPACE 4000
  16:Src/irremote/ir_LG.c **** #define LG_BIT_MARK 600
  17:Src/irremote/ir_LG.c **** #define LG_ONE_SPACE 1600
  18:Src/irremote/ir_LG.c **** #define LG_ZERO_SPACE 550
  19:Src/irremote/ir_LG.c **** #define LG_RPT_LENGTH 60000
  20:Src/irremote/ir_LG.c **** 
  21:Src/irremote/ir_LG.c **** //+=============================================================================
  22:Src/irremote/ir_LG.c **** #if DECODE_LG
  23:Src/irremote/ir_LG.c **** unsigned char  decodeLG (struct decode_results *results)
  24:Src/irremote/ir_LG.c **** {
  26              		.loc 1 24 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  25:Src/irremote/ir_LG.c ****     long  data   = 0;
  26:Src/irremote/ir_LG.c ****     int   offset = 1; // Skip first space
  27:Src/irremote/ir_LG.c **** 
  28:Src/irremote/ir_LG.c **** 	// Check we have the right amount of data
ARM GAS  /tmp/ccjRoznA.s 			page 2


  29:Src/irremote/ir_LG.c ****     if (irparams.rawlen < (2 * LG_BITS) + 1 )  return FALSE ;
  31              		.loc 1 29 0
  32 0000 2F4B     		ldr	r3, .L20
  33 0002 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
  34 0004 DBB2     		uxtb	r3, r3
  35 0006 382B     		cmp	r3, #56
  36 0008 01D8     		bhi	.L17
  37 000a 0020     		movs	r0, #0
  38              	.LVL1:
  39 000c 7047     		bx	lr
  40              	.LVL2:
  41              	.L17:
  24:Src/irremote/ir_LG.c ****     long  data   = 0;
  42              		.loc 1 24 0
  43 000e 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 24
  46              		.cfi_offset 4, -24
  47              		.cfi_offset 5, -20
  48              		.cfi_offset 6, -16
  49              		.cfi_offset 7, -12
  50              		.cfi_offset 8, -8
  51              		.cfi_offset 14, -4
  52 0012 0446     		mov	r4, r0
  30:Src/irremote/ir_LG.c **** 
  31:Src/irremote/ir_LG.c ****     // Initial mark/space
  32:Src/irremote/ir_LG.c ****     if (!MATCH_MARK(results->rawbuf[offset++], LG_HDR_MARK))  return FALSE ;
  53              		.loc 1 32 0
  54 0014 0369     		ldr	r3, [r0, #16]
  55              	.LVL3:
  56 0016 5868     		ldr	r0, [r3, #4]
  57              	.LVL4:
  58 0018 4FF4FA51 		mov	r1, #8000
  59 001c FFF7FEFF 		bl	MATCH_MARK
  60              	.LVL5:
  61 0020 10B9     		cbnz	r0, .L18
  62 0022 0020     		movs	r0, #0
  63 0024 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
  64              	.LVL6:
  65              	.L18:
  33:Src/irremote/ir_LG.c ****     if (!MATCH_SPACE(results->rawbuf[offset++], LG_HDR_SPACE))  return FALSE ;
  66              		.loc 1 33 0
  67 0028 2369     		ldr	r3, [r4, #16]
  68              	.LVL7:
  69 002a 9868     		ldr	r0, [r3, #8]
  70 002c 4FF47A61 		mov	r1, #4000
  71 0030 FFF7FEFF 		bl	MATCH_SPACE
  72              	.LVL8:
  73 0034 B8B3     		cbz	r0, .L9
  74 0036 0027     		movs	r7, #0
  75 0038 0325     		movs	r5, #3
  76 003a 3E46     		mov	r6, r7
  77 003c 0AE0     		b	.L3
  78              	.LVL9:
  79              	.L4:
  80              	.LBB2:
  34:Src/irremote/ir_LG.c **** 
ARM GAS  /tmp/ccjRoznA.s 			page 3


  35:Src/irremote/ir_LG.c ****     for (int i = 0;  i < LG_BITS;  i++) {
  36:Src/irremote/ir_LG.c ****         if (!MATCH_MARK(results->rawbuf[offset++], LG_BIT_MARK))  return FALSE ;
  37:Src/irremote/ir_LG.c **** 
  38:Src/irremote/ir_LG.c ****         if      (MATCH_SPACE(results->rawbuf[offset], LG_ONE_SPACE))   data = (data << 1) | 1 ;
  39:Src/irremote/ir_LG.c ****         else if (MATCH_SPACE(results->rawbuf[offset], LG_ZERO_SPACE))  data = (data << 1) | 0 ;
  81              		.loc 1 39 0
  82 003e 2369     		ldr	r3, [r4, #16]
  83 0040 53F82800 		ldr	r0, [r3, r8, lsl #2]
  84 0044 40F22621 		movw	r1, #550
  85 0048 FFF7FEFF 		bl	MATCH_SPACE
  86              	.LVL10:
  87 004c 88B3     		cbz	r0, .L11
  88              		.loc 1 39 0 is_stmt 0 discriminator 1
  89 004e 7600     		lsls	r6, r6, #1
  90              	.LVL11:
  91              	.L5:
  40:Src/irremote/ir_LG.c ****         else                                                           return FALSE ;
  41:Src/irremote/ir_LG.c ****         offset++;
  92              		.loc 1 41 0 is_stmt 1 discriminator 2
  93 0050 0235     		adds	r5, r5, #2
  94              	.LVL12:
  35:Src/irremote/ir_LG.c ****         if (!MATCH_MARK(results->rawbuf[offset++], LG_BIT_MARK))  return FALSE ;
  95              		.loc 1 35 0 discriminator 2
  96 0052 0137     		adds	r7, r7, #1
  97              	.LVL13:
  98              	.L3:
  35:Src/irremote/ir_LG.c ****         if (!MATCH_MARK(results->rawbuf[offset++], LG_BIT_MARK))  return FALSE ;
  99              		.loc 1 35 0 is_stmt 0 discriminator 1
 100 0054 1B2F     		cmp	r7, #27
 101 0056 16DC     		bgt	.L19
  36:Src/irremote/ir_LG.c **** 
 102              		.loc 1 36 0 is_stmt 1
 103 0058 2369     		ldr	r3, [r4, #16]
 104 005a 05F10108 		add	r8, r5, #1
 105              	.LVL14:
 106 005e 53F82500 		ldr	r0, [r3, r5, lsl #2]
 107 0062 4FF41671 		mov	r1, #600
 108 0066 FFF7FEFF 		bl	MATCH_MARK
 109              	.LVL15:
 110 006a F8B1     		cbz	r0, .L10
  38:Src/irremote/ir_LG.c ****         else if (MATCH_SPACE(results->rawbuf[offset], LG_ZERO_SPACE))  data = (data << 1) | 0 ;
 111              		.loc 1 38 0
 112 006c 2369     		ldr	r3, [r4, #16]
 113 006e 53F82800 		ldr	r0, [r3, r8, lsl #2]
 114 0072 4FF4C861 		mov	r1, #1600
 115 0076 FFF7FEFF 		bl	MATCH_SPACE
 116              	.LVL16:
 117 007a 0028     		cmp	r0, #0
 118 007c DFD0     		beq	.L4
  38:Src/irremote/ir_LG.c ****         else if (MATCH_SPACE(results->rawbuf[offset], LG_ZERO_SPACE))  data = (data << 1) | 0 ;
 119              		.loc 1 38 0 is_stmt 0 discriminator 1
 120 007e 7600     		lsls	r6, r6, #1
 121              	.LVL17:
 122 0080 46F00106 		orr	r6, r6, #1
 123              	.LVL18:
 124 0084 E4E7     		b	.L5
 125              	.LVL19:
ARM GAS  /tmp/ccjRoznA.s 			page 4


 126              	.L19:
 127              	.LBE2:
  42:Src/irremote/ir_LG.c ****     }
  43:Src/irremote/ir_LG.c **** 
  44:Src/irremote/ir_LG.c ****     // Stop bit
  45:Src/irremote/ir_LG.c ****     if (!MATCH_MARK(results->rawbuf[offset], LG_BIT_MARK))   return FALSE ;
 128              		.loc 1 45 0 is_stmt 1
 129 0086 2369     		ldr	r3, [r4, #16]
 130 0088 53F82500 		ldr	r0, [r3, r5, lsl #2]
 131 008c 4FF41671 		mov	r1, #600
 132 0090 FFF7FEFF 		bl	MATCH_MARK
 133              	.LVL20:
 134 0094 80B1     		cbz	r0, .L12
  46:Src/irremote/ir_LG.c **** 
  47:Src/irremote/ir_LG.c ****     // Success
  48:Src/irremote/ir_LG.c ****     results->bits        = LG_BITS;
 135              		.loc 1 48 0
 136 0096 1C23     		movs	r3, #28
 137 0098 E360     		str	r3, [r4, #12]
  49:Src/irremote/ir_LG.c ****     results->value       = data;
 138              		.loc 1 49 0
 139 009a A660     		str	r6, [r4, #8]
  50:Src/irremote/ir_LG.c ****     results->decode_type = LG;
 140              		.loc 1 50 0
 141 009c 0A23     		movs	r3, #10
 142 009e 2370     		strb	r3, [r4]
  51:Src/irremote/ir_LG.c ****     return TRUE;
 143              		.loc 1 51 0
 144 00a0 0120     		movs	r0, #1
 145 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 146              	.LVL21:
 147              	.L9:
  33:Src/irremote/ir_LG.c **** 
 148              		.loc 1 33 0
 149 00a6 0020     		movs	r0, #0
 150 00a8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 151              	.LVL22:
 152              	.L10:
 153              	.LBB3:
  36:Src/irremote/ir_LG.c **** 
 154              		.loc 1 36 0
 155 00ac 0020     		movs	r0, #0
 156 00ae BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 157              	.LVL23:
 158              	.L11:
  40:Src/irremote/ir_LG.c ****         offset++;
 159              		.loc 1 40 0
 160 00b2 0020     		movs	r0, #0
 161 00b4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 162              	.LVL24:
 163              	.L12:
 164              	.LBE3:
  45:Src/irremote/ir_LG.c **** 
 165              		.loc 1 45 0
 166 00b8 0020     		movs	r0, #0
  52:Src/irremote/ir_LG.c **** }
 167              		.loc 1 52 0
ARM GAS  /tmp/ccjRoznA.s 			page 5


 168 00ba BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 169              	.LVL25:
 170              	.L21:
 171 00be 00BF     		.align	2
 172              	.L20:
 173 00c0 00000000 		.word	irparams
 174              		.cfi_endproc
 175              	.LFE64:
 177              		.section	.text.sendLG,"ax",%progbits
 178              		.align	1
 179              		.global	sendLG
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 185              	sendLG:
 186              	.LFB65:
  53:Src/irremote/ir_LG.c **** #endif
  54:Src/irremote/ir_LG.c **** 
  55:Src/irremote/ir_LG.c **** //+=============================================================================
  56:Src/irremote/ir_LG.c **** #if SEND_LG
  57:Src/irremote/ir_LG.c **** void  sendLG (unsigned long data,  int nbits)
  58:Src/irremote/ir_LG.c **** {
 187              		.loc 1 58 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              	.LVL26:
 192 0000 38B5     		push	{r3, r4, r5, lr}
 193              	.LCFI1:
 194              		.cfi_def_cfa_offset 16
 195              		.cfi_offset 3, -16
 196              		.cfi_offset 4, -12
 197              		.cfi_offset 5, -8
 198              		.cfi_offset 14, -4
 199 0002 0546     		mov	r5, r0
 200 0004 0C46     		mov	r4, r1
  59:Src/irremote/ir_LG.c ****     // Set IR carrier frequency
  60:Src/irremote/ir_LG.c ****     irsend_enableIROut(38);
 201              		.loc 1 60 0
 202 0006 2620     		movs	r0, #38
 203              	.LVL27:
 204 0008 FFF7FEFF 		bl	irsend_enableIROut
 205              	.LVL28:
  61:Src/irremote/ir_LG.c **** 
  62:Src/irremote/ir_LG.c ****     // Header
  63:Src/irremote/ir_LG.c ****     irsend_mark(LG_HDR_MARK);
 206              		.loc 1 63 0
 207 000c 4FF4FA50 		mov	r0, #8000
 208 0010 FFF7FEFF 		bl	irsend_mark
 209              	.LVL29:
  64:Src/irremote/ir_LG.c ****     irsend_space(LG_HDR_SPACE);
 210              		.loc 1 64 0
 211 0014 4FF47A60 		mov	r0, #4000
 212 0018 FFF7FEFF 		bl	irsend_space
 213              	.LVL30:
  65:Src/irremote/ir_LG.c ****     irsend_mark(LG_BIT_MARK);
ARM GAS  /tmp/ccjRoznA.s 			page 6


 214              		.loc 1 65 0
 215 001c 4FF41670 		mov	r0, #600
 216 0020 FFF7FEFF 		bl	irsend_mark
 217              	.LVL31:
  66:Src/irremote/ir_LG.c **** 
  67:Src/irremote/ir_LG.c ****     // Data
  68:Src/irremote/ir_LG.c ****     unsigned long  mask;
  69:Src/irremote/ir_LG.c ****     for (mask = 1UL << (nbits - 1);  mask;  mask >>= 1) {
 218              		.loc 1 69 0
 219 0024 631E     		subs	r3, r4, #1
 220 0026 0124     		movs	r4, #1
 221              	.LVL32:
 222 0028 9C40     		lsls	r4, r4, r3
 223              	.LVL33:
 224 002a 08E0     		b	.L23
 225              	.LVL34:
 226              	.L24:
  70:Src/irremote/ir_LG.c ****         if (data & mask) {
  71:Src/irremote/ir_LG.c ****             irsend_space(LG_ONE_SPACE);
  72:Src/irremote/ir_LG.c ****             irsend_mark(LG_BIT_MARK);
  73:Src/irremote/ir_LG.c ****         } else {
  74:Src/irremote/ir_LG.c ****             irsend_space(LG_ZERO_SPACE);
 227              		.loc 1 74 0
 228 002c 40F22620 		movw	r0, #550
 229 0030 FFF7FEFF 		bl	irsend_space
 230              	.LVL35:
  75:Src/irremote/ir_LG.c ****             irsend_mark(LG_BIT_MARK);
 231              		.loc 1 75 0
 232 0034 4FF41670 		mov	r0, #600
 233 0038 FFF7FEFF 		bl	irsend_mark
 234              	.LVL36:
 235              	.L25:
  69:Src/irremote/ir_LG.c ****         if (data & mask) {
 236              		.loc 1 69 0 discriminator 2
 237 003c 6408     		lsrs	r4, r4, #1
 238              	.LVL37:
 239              	.L23:
  69:Src/irremote/ir_LG.c ****         if (data & mask) {
 240              		.loc 1 69 0 is_stmt 0 discriminator 1
 241 003e 54B1     		cbz	r4, .L28
  70:Src/irremote/ir_LG.c ****         if (data & mask) {
 242              		.loc 1 70 0 is_stmt 1
 243 0040 2C42     		tst	r4, r5
 244 0042 F3D0     		beq	.L24
  71:Src/irremote/ir_LG.c ****             irsend_mark(LG_BIT_MARK);
 245              		.loc 1 71 0
 246 0044 4FF4C860 		mov	r0, #1600
 247 0048 FFF7FEFF 		bl	irsend_space
 248              	.LVL38:
  72:Src/irremote/ir_LG.c ****         } else {
 249              		.loc 1 72 0
 250 004c 4FF41670 		mov	r0, #600
 251 0050 FFF7FEFF 		bl	irsend_mark
 252              	.LVL39:
 253 0054 F2E7     		b	.L25
 254              	.L28:
  76:Src/irremote/ir_LG.c ****         }
ARM GAS  /tmp/ccjRoznA.s 			page 7


  77:Src/irremote/ir_LG.c ****     }
  78:Src/irremote/ir_LG.c ****     irsend_space(0);  // Always end with the LED off
 255              		.loc 1 78 0
 256 0056 0020     		movs	r0, #0
 257 0058 FFF7FEFF 		bl	irsend_space
 258              	.LVL40:
 259 005c 38BD     		pop	{r3, r4, r5, pc}
 260              		.cfi_endproc
 261              	.LFE65:
 263              		.text
 264              	.Letext0:
 265              		.file 2 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/machine/_defau
 266              		.file 3 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_stdint.h"
 267              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 268              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 269              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 270              		.file 7 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/lock.h"
 271              		.file 8 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_types.h"
 272              		.file 9 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/lib/gcc/arm-none-eabi/6.3.1/include/
 273              		.file 10 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/reent.h"
 274              		.file 11 "Inc/irremote/IRremoteInt.h"
 275              		.file 12 "Inc/irremote/IRremote.h"
ARM GAS  /tmp/ccjRoznA.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ir_LG.c
     /tmp/ccjRoznA.s:16     .text.decodeLG:0000000000000000 $t
     /tmp/ccjRoznA.s:23     .text.decodeLG:0000000000000000 decodeLG
     /tmp/ccjRoznA.s:173    .text.decodeLG:00000000000000c0 $d
     /tmp/ccjRoznA.s:178    .text.sendLG:0000000000000000 $t
     /tmp/ccjRoznA.s:185    .text.sendLG:0000000000000000 sendLG
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
MATCH_MARK
MATCH_SPACE
irparams
irsend_enableIROut
irsend_mark
irsend_space
