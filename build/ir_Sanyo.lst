ARM GAS  /tmp/ccCzrlAi.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ir_Sanyo.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.decodeSanyo,"ax",%progbits
  16              		.align	1
  17              		.global	decodeSanyo
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	decodeSanyo:
  24              	.LFB64:
  25              		.file 1 "Src/irremote/ir_Sanyo.c"
   1:Src/irremote/ir_Sanyo.c **** #include "IRremote.h"
   2:Src/irremote/ir_Sanyo.c **** #include "IRremoteInt.h"
   3:Src/irremote/ir_Sanyo.c **** 
   4:Src/irremote/ir_Sanyo.c **** //==============================================================================
   5:Src/irremote/ir_Sanyo.c **** //                      SSSS   AAA   N   N  Y   Y   OOO
   6:Src/irremote/ir_Sanyo.c **** //                     S      A   A  NN  N   Y Y   O   O
   7:Src/irremote/ir_Sanyo.c **** //                      SSS   AAAAA  N N N    Y    O   O
   8:Src/irremote/ir_Sanyo.c **** //                         S  A   A  N  NN    Y    O   O
   9:Src/irremote/ir_Sanyo.c **** //                     SSSS   A   A  N   N    Y     OOO
  10:Src/irremote/ir_Sanyo.c **** //==============================================================================
  11:Src/irremote/ir_Sanyo.c **** 
  12:Src/irremote/ir_Sanyo.c **** // I think this is a Sanyo decoder:  Serial = SA 8650B
  13:Src/irremote/ir_Sanyo.c **** // Looks like Sony except for timings, 48 chars of data and time/space different
  14:Src/irremote/ir_Sanyo.c **** 
  15:Src/irremote/ir_Sanyo.c **** #define SANYO_BITS                   12
  16:Src/irremote/ir_Sanyo.c **** #define SANYO_HDR_MARK	           3500  // seen range 3500
  17:Src/irremote/ir_Sanyo.c **** #define SANYO_HDR_SPACE	            950  // seen 950
  18:Src/irremote/ir_Sanyo.c **** #define SANYO_ONE_MARK	           2400  // seen 2400
  19:Src/irremote/ir_Sanyo.c **** #define SANYO_ZERO_MARK             700  // seen 700
  20:Src/irremote/ir_Sanyo.c **** #define SANYO_DOUBLE_SPACE_USECS    800  // usually ssee 713 - not using ticks as get number wrapro
  21:Src/irremote/ir_Sanyo.c **** #define SANYO_RPT_LENGTH          45000
  22:Src/irremote/ir_Sanyo.c **** 
  23:Src/irremote/ir_Sanyo.c **** //+=============================================================================
  24:Src/irremote/ir_Sanyo.c **** #if DECODE_SANYO
  25:Src/irremote/ir_Sanyo.c **** unsigned char  decodeSanyo (struct decode_results *results)
  26:Src/irremote/ir_Sanyo.c **** {
  26              		.loc 1 26 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  32              	.LCFI0:
ARM GAS  /tmp/ccCzrlAi.s 			page 2


  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40              	.LVL1:
  27:Src/irremote/ir_Sanyo.c **** 	long  data   = 0;
  28:Src/irremote/ir_Sanyo.c **** 	int   offset = 0;  // Skip first space  <-- CHECK THIS!
  29:Src/irremote/ir_Sanyo.c **** 
  30:Src/irremote/ir_Sanyo.c ****     if (irparams.rawlen < (2 * SANYO_BITS) + 2)  return FALSE ;
  41              		.loc 1 30 0
  42 0002 314B     		ldr	r3, .L18
  43 0004 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
  44 0006 DBB2     		uxtb	r3, r3
  45 0008 192B     		cmp	r3, #25
  46 000a 56D9     		bls	.L10
  31:Src/irremote/ir_Sanyo.c **** 
  32:Src/irremote/ir_Sanyo.c **** #if 0
  33:Src/irremote/ir_Sanyo.c **** 	// Put this back in for debugging - note can't use #DEBUG as if Debug on we don't see the repeat c
  34:Src/irremote/ir_Sanyo.c **** 	Serial.print("IR Gap: ");
  35:Src/irremote/ir_Sanyo.c **** 	Serial.println( results->rawbuf[offset]);
  36:Src/irremote/ir_Sanyo.c **** 	Serial.println( "test against:");
  37:Src/irremote/ir_Sanyo.c **** 	Serial.println(results->rawbuf[offset]);
  38:Src/irremote/ir_Sanyo.c **** #endif
  39:Src/irremote/ir_Sanyo.c **** 
  40:Src/irremote/ir_Sanyo.c **** 	// Initial space
  41:Src/irremote/ir_Sanyo.c **** 	if (results->rawbuf[offset] < SANYO_DOUBLE_SPACE_USECS) {
  47              		.loc 1 41 0
  48 000c 0369     		ldr	r3, [r0, #16]
  49 000e 1A68     		ldr	r2, [r3]
  50 0010 B2F5487F 		cmp	r2, #800
  51 0014 08D2     		bcs	.L3
  42:Src/irremote/ir_Sanyo.c **** 		//Serial.print("IR Gap found: ");
  43:Src/irremote/ir_Sanyo.c **** 		results->bits        = 0;
  52              		.loc 1 43 0
  53 0016 0023     		movs	r3, #0
  54 0018 C360     		str	r3, [r0, #12]
  44:Src/irremote/ir_Sanyo.c **** 		results->value       = REPEAT;
  55              		.loc 1 44 0
  56 001a 4FF0FF33 		mov	r3, #-1
  57 001e 8360     		str	r3, [r0, #8]
  45:Src/irremote/ir_Sanyo.c **** 		results->decode_type = SANYO;
  58              		.loc 1 45 0
  59 0020 0B23     		movs	r3, #11
  60 0022 0370     		strb	r3, [r0]
  46:Src/irremote/ir_Sanyo.c ****         return TRUE;
  61              		.loc 1 46 0
  62 0024 0120     		movs	r0, #1
  63              	.LVL2:
  64 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  65              	.LVL3:
  66              	.L3:
  67 0028 0546     		mov	r5, r0
  68              	.LVL4:
  47:Src/irremote/ir_Sanyo.c **** 	}
ARM GAS  /tmp/ccCzrlAi.s 			page 3


  48:Src/irremote/ir_Sanyo.c **** 	offset++;
  49:Src/irremote/ir_Sanyo.c **** 
  50:Src/irremote/ir_Sanyo.c **** 	// Initial mark
  51:Src/irremote/ir_Sanyo.c ****     if (!MATCH_MARK(results->rawbuf[offset++], SANYO_HDR_MARK))  return FALSE ;
  69              		.loc 1 51 0
  70 002a 5868     		ldr	r0, [r3, #4]
  71              	.LVL5:
  72 002c 40F6AC51 		movw	r1, #3500
  73 0030 FFF7FEFF 		bl	MATCH_MARK
  74              	.LVL6:
  75 0034 08B9     		cbnz	r0, .L16
  76 0036 0020     		movs	r0, #0
  77 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  78              	.LVL7:
  79              	.L16:
  52:Src/irremote/ir_Sanyo.c **** 
  53:Src/irremote/ir_Sanyo.c **** 	// Skip Second Mark
  54:Src/irremote/ir_Sanyo.c ****     if (!MATCH_MARK(results->rawbuf[offset++], SANYO_HDR_MARK))  return FALSE ;
  80              		.loc 1 54 0
  81 003a 2B69     		ldr	r3, [r5, #16]
  82              	.LVL8:
  83 003c 9868     		ldr	r0, [r3, #8]
  84 003e 40F6AC51 		movw	r1, #3500
  85 0042 FFF7FEFF 		bl	MATCH_MARK
  86              	.LVL9:
  87 0046 0028     		cmp	r0, #0
  88 0048 39D0     		beq	.L12
  89 004a 0324     		movs	r4, #3
  90 004c 0026     		movs	r6, #0
  91 004e 09E0     		b	.L4
  92              	.LVL10:
  93              	.L6:
  55:Src/irremote/ir_Sanyo.c **** 
  56:Src/irremote/ir_Sanyo.c **** 	while (offset + 1 < irparams.rawlen) {
  57:Src/irremote/ir_Sanyo.c **** 		if (!MATCH_SPACE(results->rawbuf[offset++], SANYO_HDR_SPACE))  break ;
  58:Src/irremote/ir_Sanyo.c **** 
  59:Src/irremote/ir_Sanyo.c **** 		if      (MATCH_MARK(results->rawbuf[offset], SANYO_ONE_MARK))   data = (data << 1) | 1 ;
  60:Src/irremote/ir_Sanyo.c **** 		else if (MATCH_MARK(results->rawbuf[offset], SANYO_ZERO_MARK))  data = (data << 1) | 0 ;
  94              		.loc 1 60 0
  95 0050 2B69     		ldr	r3, [r5, #16]
  96 0052 53F82700 		ldr	r0, [r3, r7, lsl #2]
  97 0056 4FF42F71 		mov	r1, #700
  98 005a FFF7FEFF 		bl	MATCH_MARK
  99              	.LVL11:
 100 005e 80B3     		cbz	r0, .L14
 101              		.loc 1 60 0 is_stmt 0 discriminator 1
 102 0060 7600     		lsls	r6, r6, #1
 103              	.LVL12:
 104              	.L7:
  61:Src/irremote/ir_Sanyo.c ****         else                                                            return FALSE ;
  62:Src/irremote/ir_Sanyo.c **** 		offset++;
 105              		.loc 1 62 0 is_stmt 1
 106 0062 0234     		adds	r4, r4, #2
 107              	.LVL13:
 108              	.L4:
  56:Src/irremote/ir_Sanyo.c **** 		if (!MATCH_SPACE(results->rawbuf[offset++], SANYO_HDR_SPACE))  break ;
 109              		.loc 1 56 0
ARM GAS  /tmp/ccCzrlAi.s 			page 4


 110 0064 671C     		adds	r7, r4, #1
 111 0066 184B     		ldr	r3, .L18
 112 0068 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 113 006a DBB2     		uxtb	r3, r3
 114 006c 9F42     		cmp	r7, r3
 115 006e 15DA     		bge	.L5
  57:Src/irremote/ir_Sanyo.c **** 
 116              		.loc 1 57 0
 117 0070 2B69     		ldr	r3, [r5, #16]
 118              	.LVL14:
 119 0072 53F82400 		ldr	r0, [r3, r4, lsl #2]
 120 0076 40F2B631 		movw	r1, #950
 121 007a FFF7FEFF 		bl	MATCH_SPACE
 122              	.LVL15:
 123 007e 60B1     		cbz	r0, .L13
  59:Src/irremote/ir_Sanyo.c **** 		else if (MATCH_MARK(results->rawbuf[offset], SANYO_ZERO_MARK))  data = (data << 1) | 0 ;
 124              		.loc 1 59 0
 125 0080 2B69     		ldr	r3, [r5, #16]
 126 0082 53F82700 		ldr	r0, [r3, r7, lsl #2]
 127 0086 4FF41661 		mov	r1, #2400
 128 008a FFF7FEFF 		bl	MATCH_MARK
 129              	.LVL16:
 130 008e 0028     		cmp	r0, #0
 131 0090 DED0     		beq	.L6
  59:Src/irremote/ir_Sanyo.c **** 		else if (MATCH_MARK(results->rawbuf[offset], SANYO_ZERO_MARK))  data = (data << 1) | 0 ;
 132              		.loc 1 59 0 is_stmt 0 discriminator 1
 133 0092 7600     		lsls	r6, r6, #1
 134              	.LVL17:
 135 0094 46F00106 		orr	r6, r6, #1
 136              	.LVL18:
 137 0098 E3E7     		b	.L7
 138              	.L13:
  57:Src/irremote/ir_Sanyo.c **** 
 139              		.loc 1 57 0 is_stmt 1
 140 009a 3C46     		mov	r4, r7
 141              	.LVL19:
 142              	.L5:
  63:Src/irremote/ir_Sanyo.c **** 	}
  64:Src/irremote/ir_Sanyo.c **** 
  65:Src/irremote/ir_Sanyo.c **** 	// Success
  66:Src/irremote/ir_Sanyo.c **** 	results->bits = (offset - 1) / 2;
 143              		.loc 1 66 0
 144 009c 013C     		subs	r4, r4, #1
 145              	.LVL20:
 146 009e 04EBD474 		add	r4, r4, r4, lsr #31
 147              	.LVL21:
 148 00a2 6410     		asrs	r4, r4, #1
 149 00a4 EC60     		str	r4, [r5, #12]
  67:Src/irremote/ir_Sanyo.c **** 	if (results->bits < 12) {
 150              		.loc 1 67 0
 151 00a6 0B2C     		cmp	r4, #11
 152 00a8 04DD     		ble	.L17
  68:Src/irremote/ir_Sanyo.c **** 		results->bits = 0;
  69:Src/irremote/ir_Sanyo.c ****         return FALSE;
  70:Src/irremote/ir_Sanyo.c **** 	}
  71:Src/irremote/ir_Sanyo.c **** 
  72:Src/irremote/ir_Sanyo.c **** 	results->value       = data;
ARM GAS  /tmp/ccCzrlAi.s 			page 5


 153              		.loc 1 72 0
 154 00aa AE60     		str	r6, [r5, #8]
  73:Src/irremote/ir_Sanyo.c **** 	results->decode_type = SANYO;
 155              		.loc 1 73 0
 156 00ac 0B23     		movs	r3, #11
 157 00ae 2B70     		strb	r3, [r5]
  74:Src/irremote/ir_Sanyo.c ****     return TRUE;
 158              		.loc 1 74 0
 159 00b0 0120     		movs	r0, #1
 160 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 161              	.LVL22:
 162              	.L17:
  68:Src/irremote/ir_Sanyo.c **** 		results->bits = 0;
 163              		.loc 1 68 0
 164 00b4 0020     		movs	r0, #0
 165 00b6 E860     		str	r0, [r5, #12]
  69:Src/irremote/ir_Sanyo.c **** 	}
 166              		.loc 1 69 0
 167 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 168              	.LVL23:
 169              	.L10:
  30:Src/irremote/ir_Sanyo.c **** 
 170              		.loc 1 30 0
 171 00ba 0020     		movs	r0, #0
 172              	.LVL24:
 173 00bc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 174              	.LVL25:
 175              	.L12:
  54:Src/irremote/ir_Sanyo.c **** 
 176              		.loc 1 54 0
 177 00be 0020     		movs	r0, #0
 178 00c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 179              	.LVL26:
 180              	.L14:
  61:Src/irremote/ir_Sanyo.c **** 		offset++;
 181              		.loc 1 61 0
 182 00c2 0020     		movs	r0, #0
  75:Src/irremote/ir_Sanyo.c **** }
 183              		.loc 1 75 0
 184 00c4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 185              	.LVL27:
 186              	.L19:
 187 00c6 00BF     		.align	2
 188              	.L18:
 189 00c8 00000000 		.word	irparams
 190              		.cfi_endproc
 191              	.LFE64:
 193              		.text
 194              	.Letext0:
 195              		.file 2 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/machine/_defau
 196              		.file 3 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_stdint.h"
 197              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 198              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 199              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 200              		.file 7 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/lock.h"
 201              		.file 8 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_types.h"
 202              		.file 9 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/lib/gcc/arm-none-eabi/6.3.1/include/
ARM GAS  /tmp/ccCzrlAi.s 			page 6


 203              		.file 10 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/reent.h"
 204              		.file 11 "Inc/irremote/IRremoteInt.h"
 205              		.file 12 "Inc/irremote/IRremote.h"
ARM GAS  /tmp/ccCzrlAi.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ir_Sanyo.c
     /tmp/ccCzrlAi.s:16     .text.decodeSanyo:0000000000000000 $t
     /tmp/ccCzrlAi.s:23     .text.decodeSanyo:0000000000000000 decodeSanyo
     /tmp/ccCzrlAi.s:189    .text.decodeSanyo:00000000000000c8 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
MATCH_MARK
MATCH_SPACE
irparams
