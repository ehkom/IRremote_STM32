ARM GAS  /tmp/ccFG08rZ.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"trace_impl.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._trace_write_itm,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	_trace_write_itm:
  23              	.LFB66:
  24              		.file 1 "Src/diag/trace_impl.c"
   1:Src/diag/trace_impl.c **** /*
   2:Src/diag/trace_impl.c ****  * This file is part of the ÂµOS++ distribution.
   3:Src/diag/trace_impl.c ****  *   (https://github.com/micro-os-plus)
   4:Src/diag/trace_impl.c ****  * Copyright (c) 2014 Liviu Ionescu.
   5:Src/diag/trace_impl.c ****  *
   6:Src/diag/trace_impl.c ****  * Permission is hereby granted, free of charge, to any person
   7:Src/diag/trace_impl.c ****  * obtaining a copy of this software and associated documentation
   8:Src/diag/trace_impl.c ****  * files (the "Software"), to deal in the Software without
   9:Src/diag/trace_impl.c ****  * restriction, including without limitation the rights to use,
  10:Src/diag/trace_impl.c ****  * copy, modify, merge, publish, distribute, sublicense, and/or
  11:Src/diag/trace_impl.c ****  * sell copies of the Software, and to permit persons to whom
  12:Src/diag/trace_impl.c ****  * the Software is furnished to do so, subject to the following
  13:Src/diag/trace_impl.c ****  * conditions:
  14:Src/diag/trace_impl.c ****  *
  15:Src/diag/trace_impl.c ****  * The above copyright notice and this permission notice shall be
  16:Src/diag/trace_impl.c ****  * included in all copies or substantial portions of the Software.
  17:Src/diag/trace_impl.c ****  *
  18:Src/diag/trace_impl.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  19:Src/diag/trace_impl.c ****  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
  20:Src/diag/trace_impl.c ****  * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  21:Src/diag/trace_impl.c ****  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  22:Src/diag/trace_impl.c ****  * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  23:Src/diag/trace_impl.c ****  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  24:Src/diag/trace_impl.c ****  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
  25:Src/diag/trace_impl.c ****  * OTHER DEALINGS IN THE SOFTWARE.
  26:Src/diag/trace_impl.c ****  */
  27:Src/diag/trace_impl.c **** 
  28:Src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
  29:Src/diag/trace_impl.c **** 
  30:Src/diag/trace_impl.c **** #if defined(TRACE)
  31:Src/diag/trace_impl.c **** 
  32:Src/diag/trace_impl.c **** #include "stm32f1xx.h"
  33:Src/diag/trace_impl.c **** #include "diag/Trace.h"
  34:Src/diag/trace_impl.c **** 
ARM GAS  /tmp/ccFG08rZ.s 			page 2


  35:Src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
  36:Src/diag/trace_impl.c **** 
  37:Src/diag/trace_impl.c **** // One of these definitions must be passed via the compiler command line
  38:Src/diag/trace_impl.c **** // Note: small Cortex-M0/M0+ might implement a simplified debug interface.
  39:Src/diag/trace_impl.c **** 
  40:Src/diag/trace_impl.c **** //#define OS_USE_TRACE_ITM
  41:Src/diag/trace_impl.c **** //#define OS_USE_TRACE_SEMIHOSTING_DEBUG
  42:Src/diag/trace_impl.c **** //#define OS_USE_TRACE_SEMIHOSTING_STDOUT
  43:Src/diag/trace_impl.c **** 
  44:Src/diag/trace_impl.c **** #if !(defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__))
  45:Src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_ITM)
  46:Src/diag/trace_impl.c **** #undef OS_USE_TRACE_ITM
  47:Src/diag/trace_impl.c **** #warning "ITM unavailable"
  48:Src/diag/trace_impl.c **** #endif // defined(OS_USE_TRACE_ITM)
  49:Src/diag/trace_impl.c **** #endif // !(defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__))
  50:Src/diag/trace_impl.c **** 
  51:Src/diag/trace_impl.c **** #if defined(OS_DEBUG_SEMIHOSTING_FAULTS)
  52:Src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_SEMIHOSTING_STDOUT) || defined(OS_USE_TRACE_SEMIHOSTING_DEBUG)
  53:Src/diag/trace_impl.c **** #error "Cannot debug semihosting using semihosting trace; use OS_USE_TRACE_ITM"
  54:Src/diag/trace_impl.c **** #endif
  55:Src/diag/trace_impl.c **** #endif
  56:Src/diag/trace_impl.c **** 
  57:Src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
  58:Src/diag/trace_impl.c **** 
  59:Src/diag/trace_impl.c **** // Forward definitions.
  60:Src/diag/trace_impl.c **** 
  61:Src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_ITM)
  62:Src/diag/trace_impl.c **** static ssize_t
  63:Src/diag/trace_impl.c **** _trace_write_itm (const char* buf, size_t nbyte);
  64:Src/diag/trace_impl.c **** #endif
  65:Src/diag/trace_impl.c **** 
  66:Src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_SEMIHOSTING_STDOUT)
  67:Src/diag/trace_impl.c **** static ssize_t
  68:Src/diag/trace_impl.c **** _trace_write_semihosting_stdout(const char* buf, size_t nbyte);
  69:Src/diag/trace_impl.c **** #endif
  70:Src/diag/trace_impl.c **** 
  71:Src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_SEMIHOSTING_DEBUG)
  72:Src/diag/trace_impl.c **** static ssize_t
  73:Src/diag/trace_impl.c **** _trace_write_semihosting_debug(const char* buf, size_t nbyte);
  74:Src/diag/trace_impl.c **** #endif
  75:Src/diag/trace_impl.c **** 
  76:Src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
  77:Src/diag/trace_impl.c **** 
  78:Src/diag/trace_impl.c **** void
  79:Src/diag/trace_impl.c **** trace_initialize(void)
  80:Src/diag/trace_impl.c **** {
  81:Src/diag/trace_impl.c ****   // For regular ITM / semihosting, no inits required.
  82:Src/diag/trace_impl.c **** }
  83:Src/diag/trace_impl.c **** 
  84:Src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
  85:Src/diag/trace_impl.c **** 
  86:Src/diag/trace_impl.c **** // This function is called from _write() for fd==1 or fd==2 and from some
  87:Src/diag/trace_impl.c **** // of the trace_* functions.
  88:Src/diag/trace_impl.c **** 
  89:Src/diag/trace_impl.c **** ssize_t
  90:Src/diag/trace_impl.c **** trace_write (const char* buf __attribute__((unused)),
  91:Src/diag/trace_impl.c **** 	     size_t nbyte __attribute__((unused)))
ARM GAS  /tmp/ccFG08rZ.s 			page 3


  92:Src/diag/trace_impl.c **** {
  93:Src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_ITM)
  94:Src/diag/trace_impl.c ****   return _trace_write_itm (buf, nbyte);
  95:Src/diag/trace_impl.c **** #elif defined(OS_USE_TRACE_SEMIHOSTING_STDOUT)
  96:Src/diag/trace_impl.c ****   return _trace_write_semihosting_stdout(buf, nbyte);
  97:Src/diag/trace_impl.c **** #elif defined(OS_USE_TRACE_SEMIHOSTING_DEBUG)
  98:Src/diag/trace_impl.c ****   return _trace_write_semihosting_debug(buf, nbyte);
  99:Src/diag/trace_impl.c **** #endif
 100:Src/diag/trace_impl.c **** 
 101:Src/diag/trace_impl.c ****   return -1;
 102:Src/diag/trace_impl.c **** }
 103:Src/diag/trace_impl.c **** 
 104:Src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
 105:Src/diag/trace_impl.c **** 
 106:Src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_ITM)
 107:Src/diag/trace_impl.c **** 
 108:Src/diag/trace_impl.c **** #if defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__)
 109:Src/diag/trace_impl.c **** 
 110:Src/diag/trace_impl.c **** // ITM is the ARM standard mechanism, running over SWD/SWO on Cortex-M3/M4
 111:Src/diag/trace_impl.c **** // devices, and is the recommended setting, if available.
 112:Src/diag/trace_impl.c **** //
 113:Src/diag/trace_impl.c **** // The JLink probe and the GDB server fully support SWD/SWO
 114:Src/diag/trace_impl.c **** // and the JLink Debugging plug-in enables it by default.
 115:Src/diag/trace_impl.c **** // The current OpenOCD does not include support to parse the SWO stream,
 116:Src/diag/trace_impl.c **** // so this configuration will not work on OpenOCD (will not crash, but
 117:Src/diag/trace_impl.c **** // nothing will be displayed in the output console).
 118:Src/diag/trace_impl.c **** 
 119:Src/diag/trace_impl.c **** #if !defined(OS_INTEGER_TRACE_ITM_STIMULUS_PORT)
 120:Src/diag/trace_impl.c **** #define OS_INTEGER_TRACE_ITM_STIMULUS_PORT     (0)
 121:Src/diag/trace_impl.c **** #endif
 122:Src/diag/trace_impl.c **** 
 123:Src/diag/trace_impl.c **** static ssize_t
 124:Src/diag/trace_impl.c **** _trace_write_itm (const char* buf, size_t nbyte)
 125:Src/diag/trace_impl.c **** {
  25              		.loc 1 125 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31              	.LBB2:
 126:Src/diag/trace_impl.c ****   for (size_t i = 0; i < nbyte; i++)
  32              		.loc 1 126 0
  33 0000 0022     		movs	r2, #0
  34              	.LVL1:
  35 0002 8A42     		cmp	r2, r1
  36 0004 31D2     		bcs	.L15
 127:Src/diag/trace_impl.c ****     {
 128:Src/diag/trace_impl.c ****       // Check if ITM or the stimulus port are not enabled
 129:Src/diag/trace_impl.c ****       if (((ITM->TCR & ITM_TCR_ITMENA_Msk) == 0)
  37              		.loc 1 129 0
  38 0006 4FF06043 		mov	r3, #-536870912
  39 000a D3F8803E 		ldr	r3, [r3, #3712]
  40 000e 13F0010F 		tst	r3, #1
  41 0012 28D0     		beq	.L9
 130:Src/diag/trace_impl.c **** 	  || ((ITM->TER & (1UL << OS_INTEGER_TRACE_ITM_STIMULUS_PORT)) == 0))
  42              		.loc 1 130 0
ARM GAS  /tmp/ccFG08rZ.s 			page 4


  43 0014 4FF06043 		mov	r3, #-536870912
  44 0018 D3F8003E 		ldr	r3, [r3, #3584]
  45 001c 13F0010F 		tst	r3, #1
  46 0020 21D0     		beq	.L9
  47              	.LBE2:
 125:Src/diag/trace_impl.c ****   for (size_t i = 0; i < nbyte; i++)
  48              		.loc 1 125 0
  49 0022 10B4     		push	{r4}
  50              	.LCFI0:
  51              		.cfi_def_cfa_offset 4
  52              		.cfi_offset 4, -4
  53 0024 0DE0     		b	.L4
  54              	.L6:
  55              	.LBB3:
 129:Src/diag/trace_impl.c **** 	  || ((ITM->TER & (1UL << OS_INTEGER_TRACE_ITM_STIMULUS_PORT)) == 0))
  56              		.loc 1 129 0
  57 0026 4FF06043 		mov	r3, #-536870912
  58 002a D3F8803E 		ldr	r3, [r3, #3712]
  59 002e 13F0010F 		tst	r3, #1
  60 0032 15D0     		beq	.L3
  61              		.loc 1 130 0
  62 0034 4FF06043 		mov	r3, #-536870912
  63 0038 D3F8003E 		ldr	r3, [r3, #3584]
  64 003c 13F0010F 		tst	r3, #1
  65 0040 0ED0     		beq	.L3
  66              	.L4:
 131:Src/diag/trace_impl.c **** 	{
 132:Src/diag/trace_impl.c **** 	  return (ssize_t)i; // return the number of sent characters (may be 0)
 133:Src/diag/trace_impl.c **** 	}
 134:Src/diag/trace_impl.c **** 
 135:Src/diag/trace_impl.c ****       // Wait until STIMx is ready...
 136:Src/diag/trace_impl.c ****       while (ITM->PORT[OS_INTEGER_TRACE_ITM_STIMULUS_PORT].u32 == 0)
  67              		.loc 1 136 0 discriminator 1
  68 0042 4FF06043 		mov	r3, #-536870912
  69 0046 1B68     		ldr	r3, [r3]
  70 0048 002B     		cmp	r3, #0
  71 004a FAD0     		beq	.L4
  72              	.LVL2:
 137:Src/diag/trace_impl.c **** 	;
 138:Src/diag/trace_impl.c ****       // then send data, one byte at a time
 139:Src/diag/trace_impl.c ****       ITM->PORT[OS_INTEGER_TRACE_ITM_STIMULUS_PORT].u8 = (uint8_t) (*buf++);
  73              		.loc 1 139 0 discriminator 2
  74 004c 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
  75 004e 4FF06043 		mov	r3, #-536870912
  76 0052 1C70     		strb	r4, [r3]
 126:Src/diag/trace_impl.c ****     {
  77              		.loc 1 126 0 discriminator 2
  78 0054 0132     		adds	r2, r2, #1
  79              	.LVL3:
  80              		.loc 1 139 0 discriminator 2
  81 0056 0130     		adds	r0, r0, #1
  82              	.LVL4:
 126:Src/diag/trace_impl.c ****     {
  83              		.loc 1 126 0 discriminator 2
  84 0058 8A42     		cmp	r2, r1
  85 005a E4D3     		bcc	.L6
  86              	.LBE3:
ARM GAS  /tmp/ccFG08rZ.s 			page 5


 140:Src/diag/trace_impl.c ****     }
 141:Src/diag/trace_impl.c **** 
 142:Src/diag/trace_impl.c ****   return (ssize_t)nbyte; // all characters successfully sent
  87              		.loc 1 142 0
  88 005c 0846     		mov	r0, r1
  89              	.LVL5:
  90 005e 00E0     		b	.L1
  91              	.LVL6:
  92              	.L3:
  93              	.LBB4:
 132:Src/diag/trace_impl.c **** 	}
  94              		.loc 1 132 0
  95 0060 1046     		mov	r0, r2
  96              	.LVL7:
  97              	.L1:
  98              	.LBE4:
 143:Src/diag/trace_impl.c **** }
  99              		.loc 1 143 0
 100 0062 10BC     		pop	{r4}
 101              	.LCFI1:
 102              		.cfi_restore 4
 103              		.cfi_def_cfa_offset 0
 104 0064 7047     		bx	lr
 105              	.LVL8:
 106              	.L9:
 107              	.LBB5:
 132:Src/diag/trace_impl.c **** 	}
 108              		.loc 1 132 0
 109 0066 1046     		mov	r0, r2
 110              	.LVL9:
 111 0068 7047     		bx	lr
 112              	.LVL10:
 113              	.L15:
 114              	.LBE5:
 142:Src/diag/trace_impl.c **** }
 115              		.loc 1 142 0
 116 006a 0846     		mov	r0, r1
 117              	.LVL11:
 118 006c 7047     		bx	lr
 119              		.cfi_endproc
 120              	.LFE66:
 122              		.section	.text.trace_initialize,"ax",%progbits
 123              		.align	1
 124              		.global	trace_initialize
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu softvfp
 130              	trace_initialize:
 131              	.LFB64:
  80:Src/diag/trace_impl.c ****   // For regular ITM / semihosting, no inits required.
 132              		.loc 1 80 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 137 0000 7047     		bx	lr
ARM GAS  /tmp/ccFG08rZ.s 			page 6


 138              		.cfi_endproc
 139              	.LFE64:
 141              		.section	.text.trace_write,"ax",%progbits
 142              		.align	1
 143              		.global	trace_write
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu softvfp
 149              	trace_write:
 150              	.LFB65:
  92:Src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_ITM)
 151              		.loc 1 92 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              	.LVL12:
  92:Src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_ITM)
 156              		.loc 1 92 0
 157 0000 08B5     		push	{r3, lr}
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 3, -8
 161              		.cfi_offset 14, -4
  94:Src/diag/trace_impl.c **** #elif defined(OS_USE_TRACE_SEMIHOSTING_STDOUT)
 162              		.loc 1 94 0
 163 0002 FFF7FEFF 		bl	_trace_write_itm
 164              	.LVL13:
 102:Src/diag/trace_impl.c **** 
 165              		.loc 1 102 0
 166 0006 08BD     		pop	{r3, pc}
 167              		.cfi_endproc
 168              	.LFE65:
 170              		.text
 171              	.Letext0:
 172              		.file 2 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/machine/_defau
 173              		.file 3 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_stdint.h"
 174              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 175              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 176              		.file 6 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/lib/gcc/arm-none-eabi/6.3.1/include/
 177              		.file 7 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/lock.h"
 178              		.file 8 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_types.h"
 179              		.file 9 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/reent.h"
 180              		.file 10 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/types.h"
 181              		.file 11 "/home/mpitiot/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/unistd.h"
ARM GAS  /tmp/ccFG08rZ.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 trace_impl.c
     /tmp/ccFG08rZ.s:16     .text._trace_write_itm:0000000000000000 $t
     /tmp/ccFG08rZ.s:22     .text._trace_write_itm:0000000000000000 _trace_write_itm
     /tmp/ccFG08rZ.s:123    .text.trace_initialize:0000000000000000 $t
     /tmp/ccFG08rZ.s:130    .text.trace_initialize:0000000000000000 trace_initialize
     /tmp/ccFG08rZ.s:142    .text.trace_write:0000000000000000 $t
     /tmp/ccFG08rZ.s:149    .text.trace_write:0000000000000000 trace_write
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
